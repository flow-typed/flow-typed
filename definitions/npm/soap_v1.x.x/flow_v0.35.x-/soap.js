// @flow
/**
 * Flowtype definitions for soap
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'soap' {

    declare interface Security {}
    declare class WSSecurity mixins Security {
        constructor(username: string, password: string, options?: any): this
    }
    declare class ClientSSLSecurity mixins Security {
        constructor(key: string, cert: string, ca: string, defaults: any): this
    }
    declare type Client = {
        setSecurity(s: Security): void,
        [method: string]: (
            args: any,
            fn: (err: any, result: any) => void,
            options?: any,
            extraHeaders?: any) => void,
        addSoapHeader(headJSON: any): void,
        setEndpoint(endpoint: string): void
    }
    declare     function createClient(wsdlPath: string, options: any, fn: (err: any, client: Client) => void): void
    declare     export type Server = {
        addSoapHeader(soapHeader: any, name: any, namespace: any, xmlns: any): any,
        changeSoapHeader(index: any, soapHeader: any, name: any, namespace: any, xmlns: any): any,
        getSoapHeaders(): any,
        clearSoapHeaders(): any,
        log(type: any, data: any): any
    }
    declare     export function listen(server: any, path: string, service: any, wsdl: string): Server
}