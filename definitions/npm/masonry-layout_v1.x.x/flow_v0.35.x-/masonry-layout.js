// @flow
/**
 * Flowtype definitions for masonry-layout
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'Masonry' {
    declare class Masonry mixins MasonryGrid {
        constructor(options?: MasonryOptions): this;
        constructor(selector: string, options?: MasonryOptions): this
    }
    declare interface MasonryGrid {
        masonry(): void,
            masonry(eventName: string, listener: any): void,
            layout(): void,
            layoutItems(items: Array<any>, isStill?: boolean): void,
            stamp(elements: Array<any>): void,
            unstamp(elements: Array<any>): void,
            appended(elements: Array<any>): void,
            prepended(elements: Array<any>): void,
            addItems(elements: Array<any>): void,
            remove(elements: Array<any>): void,
            on(eventName: string, listener: any): void,
            off(eventName: string, listener: any): void,
            once(eventName: string, listener: any): void,
            reloadItems(): void,
            destroy(): void,
            getItemElements(): Array<any>,
            data(element: Element): Masonry
    }
    declare interface MasonryOptions {
        itemSelector?: string,
            columnWidth?: any,
            percentPosition?: boolean,
            gutter?: any,
            stamp?: string,
            fitWidth?: boolean,
            originLeft?: boolean,
            originTop?: boolean,
            containerStyle?: Object,
            transitionDuration?: any,
            resize?: boolean,
            initLayout?: boolean
    }
}
declare interface JQuery {
    masonry(options?: Masonry.MasonryOptions): JQuery
}