// @flow
/**
 * Flowtype definitions for bunnymq
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'bunnymq' {
    declare     export type bunnymq$ConsumerCallback = (message: Object) => void;


    /**
     * Consumer.
     * @interface  
     */
    declare     export interface bunnymq$Consumer {

        /**
         * Handle messages from a named queue.
         * @param  A named queue.
         * @param  A callback.
         */
        consume(queue: string, callback: bunnymq$ConsumerCallback): void
    }


    /**
     * bunnymq instance.
     * @interface  
     */
    declare     export interface bunnymq$Instance {

        /**
         * Consumer.
         * @type  
         */
        consumer: bunnymq$Consumer,

            /**
             * Producer.
             * @type  
             */
            producer: bunnymq$Producer
    }


    /**
     * Options.
     * @interface  
     */
    declare     export interface bunnymq$Options {

        /**
         * Consumer suffix.
         * @type  
         */
        consumerSuffix?: string,

            /**
             * Host.
             * @type  
             */
            host?: string,

            /**
             * Hostname.
             * @type  
             */
            hostname?: string,

            /**
             * Number of fetched messages at once on the channel.
             * @type  
             */
            prefetch?: number,

            /**
             * Requeue put back message into the broker if consumer crashes/trigger exception.
             * @type  
             */
            requeue?: boolean,

            /**
             * Time between two reconnect (in milliseconds).
             * @type  
             */
            timeout?: number,

            /**
             * Transport.
             * @type  
             */
            transport?: any
    }


    /**
     * Producer.
     * @inteface  
     */
    declare     export interface bunnymq$Producer {

        /**
         * Send messages to a named queue.
         * @param  A named queue.
         * @param  A message.
         * @return  The consumer response.
         */
        produce(
            queue: string,
            message: Object,
            options?: bunnymq$ProducerOptions): PromiseLike<Object >
    }


    /**
     * Options for producer.
     * @interface  
     */
    declare     export interface bunnymq$ProducerOptions {
        routingKey?: string,
            rpc?: boolean
    }
    declare module.exports: typeof bunnymq
}