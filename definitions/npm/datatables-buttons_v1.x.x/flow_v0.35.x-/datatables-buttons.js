// @flow
/**
 * Flowtype definitions for datatables-buttons
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export interface DataTables$Settings {

    /**
     * Buttons extension options
     */
    buttons?: boolean | string[] | DataTables$ButtonSettings[]
}


/**
 * Buttons extension options
 */
declare export interface DataTables$ButtonSettings {

    /**
     * Action to take when the button is activated
     */
    action?: DataTables$FunctionButtonAction,

        /**
         * Ensure that any requirements have been satisfied before initialising a button
         */
        available?: DataTables$FunctionButtonAvailable,

        /**
         * Set the class name for the button
         */
        className?: string,

        /**
         * Function that is called when the button is destroyed
         */
        destroy?: DataTables$FunctionButtonInit,

        /**
         * Set a button's initial enabled state
         */
        enabled?: boolean,

        /**
         * Define which button type the button should be based on
         */
        extend?: string,

        /**
         * Initialisation function that can be used to add events specific to this button
         */
        init?: DataTables$FunctionButtonInit,

        /**
         * Define an activation key for a button
         */
        key?: string | DataTables$ButtonKey,

        /**
         * Set a name for each selection
         */
        name?: string,

        /**
         * Unique namespace for every button
         */
        namespace?: string,

        /**
         * The text to show in the button
         */
        text?: string | DataTables$ButtonText,

        /**
         * Button 'title' attribute text
         */
        titleAttr?: string,
        exportOptions?: DataTables$ButtonExportOptions,
        autoPrint?: boolean,
        customize?: DataTables$FunctionButtonCustomize
}

declare export interface DataTables$FunctionButtonAvailable {
    (dt: DataTables$DataTable, config: any): boolean
}

declare export interface DataTables$ButtonExportOptions {
    columns?: string
}

declare export interface DataTables$ButtonKey {
    key?: string,
        shiftKey?: boolean,
        altKey?: boolean,
        ctrlKey?: boolean,
        metaKey?: boolean
}

declare export interface DataTables$ButtonText {
    (dt: DataTables$DataTable, node: JQuery, config: any): string
}

declare export interface DataTables$FunctionButtonInit {
    (dt: DataTables$DataTable, node: JQuery, config: any): void
}

declare export interface DataTables$FunctionButtonAction {
    (e: any, dt: DataTables$DataTable, node: JQuery, config: any): void
}

declare export interface DataTables$FunctionButtonCustomize {
    (win: Window): void
}