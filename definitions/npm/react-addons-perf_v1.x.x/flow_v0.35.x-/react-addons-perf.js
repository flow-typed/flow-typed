/**
 * Flowtype definitions for react-addons-perf
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface ___React$ComponentPerfContext {
    current: string,
        owner: string
}

declare interface ___React$NumericPerfContext {
    [key: string]: number
}

declare interface ___React$Measurements {
    exclusive: ___React$NumericPerfContext,
        inclusive: ___React$NumericPerfContext,
        render: ___React$NumericPerfContext,
        counts: ___React$NumericPerfContext,
        writes: ___React$NumericPerfContext,
        displayNames: {
            [key: string]: ___React$ComponentPerfContext
        },
        totalTime: number
}


declare var npm$namespace$Perf: {
    start: typeof Perf$start,
    stop: typeof Perf$stop,
    printInclusive: typeof Perf$printInclusive,
    printExclusive: typeof Perf$printExclusive,
    printWasted: typeof Perf$printWasted,
    printOperations: typeof Perf$printOperations,
    getLastMeasurements: typeof Perf$getLastMeasurements,
    getExclusive: typeof Perf$getExclusive,
    getInclusive: typeof Perf$getInclusive,
    getWasted: typeof Perf$getWasted,
    getOperations: typeof Perf$getOperations,
    printDOM: typeof Perf$printDOM,
}
declare export function Perf$start(): void

declare export function Perf$stop(): void

declare export function Perf$printInclusive(measurements?: ___React$Measurements[]): void

declare export function Perf$printExclusive(measurements?: ___React$Measurements[]): void

declare export function Perf$printWasted(measurements?: ___React$Measurements[]): void

declare export function Perf$printOperations(measurements?: ___React$Measurements[]): void

declare export function Perf$getLastMeasurements(): ___React$Measurements[]

declare export function Perf$getExclusive(measurements?: ___React$Measurements[]): any

declare export function Perf$getInclusive(measurements?: ___React$Measurements[]): any

declare export function Perf$getWasted(measurements?: ___React$Measurements[]): any

declare export function Perf$getOperations(measurements?: ___React$Measurements[]): any

declare export function Perf$printDOM(measurements?: ___React$Measurements[]): voiddeclare module 'react-addons-perf' {
    declare module.exports: typeof Perf
}