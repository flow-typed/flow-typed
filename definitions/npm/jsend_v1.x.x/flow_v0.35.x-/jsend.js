/**
 * Flowtype definitions for jsend
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export interface Express$Response {
    jsend: jsend$jsendExpress
}
declare interface jsend$JSendObject {
    status: string,
        code?: number,
        data?: any,
        message?: string
}

declare interface jsend$jsendCore {
    success(data: Object): jsend$JSendObject,
        fail(data: Object): jsend$JSendObject,
        error(
            message: string | {
                message: string,
                code?: number,
                data?: Object
            }): jsend$JSendObject
}

declare type jsend$jsendExpress = {
    (err: string | Object, json?: Object): void
} & jsend$jsendCore


declare type jsend$jsend = {
    isValid(json: Object): boolean,
    forward(json: Object, done: (err: any, data: any) => any): void,
    fromArguments(err: string | Object, json?: Object): jsend$JSendObject,
    middleware(req: any, res: any, next: Function): any
} & jsend$jsendCore


declare type jsend$jsendExport = {
    (config?: {
        strict: boolean
    }, host?: Object): jsend$jsend
} & jsend$jsend


declare var jsend: jsend$jsendExport;
declare module 'jsend' {
    declare module.exports: typeof jsend$jsend
}