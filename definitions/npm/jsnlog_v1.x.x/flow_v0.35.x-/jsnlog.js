// @flow
/**
 * Flowtype definitions for jsnlog
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


declare var npm$namespace$JL: {
    setOptions: typeof JL$setOptions,
    createAjaxAppender: typeof JL$createAjaxAppender,
    createConsoleAppender: typeof JL$createConsoleAppender,
    getOffLevel: typeof JL$getOffLevel,
    getTraceLevel: typeof JL$getTraceLevel,
    getDebugLevel: typeof JL$getDebugLevel,
    getInfoLevel: typeof JL$getInfoLevel,
    getWarnLevel: typeof JL$getWarnLevel,
    getErrorLevel: typeof JL$getErrorLevel,
    getFatalLevel: typeof JL$getFatalLevel,
    getAllLevel: typeof JL$getAllLevel,
}
declare export function JL$setOptions(options: JL$JSNLogOptions): void

declare export function JL$createAjaxAppender(appenderName: string): JL$JSNLogAjaxAppender

declare export function JL$createConsoleAppender(appenderName: string): JL$JSNLogConsoleAppender

declare export class Exception {
    constructor(data: any, inner?: any): this
}

declare export function JL$getOffLevel(): number

declare export function JL$getTraceLevel(): number

declare export function JL$getDebugLevel(): number

declare export function JL$getInfoLevel(): number

declare export function JL$getWarnLevel(): number

declare export function JL$getErrorLevel(): number

declare export function JL$getFatalLevel(): number

declare export function JL$getAllLevel(): numberdeclare function ___jsnlog_configure(jsnlog: any): voiddeclare function JL(loggerName?: string): JL$JSNLogLogger