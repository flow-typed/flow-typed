/**
 * Flowtype definitions for sqs-producer
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'sqs-producer' {

    declare module 'SQSProducer' {
        declare interface ProducerOpts {
            queueUrl: string,
                region?: string,
                batchSize?: number,
                sqs?: SQS
        }
        declare interface ProducerCallback<T>{
            (err?: Error, data?: T): any
        }
        declare interface ProducerMessageAttribute {
            DataType: "String" | "Binary",
                StringValue?: string,
                BinaryValue?: Buffer
        }
        declare interface ProducerMessage {
            id: string,
                body: string,
                messageAttributes?: {
                    [key: string]: ProducerMessageAttribute
                },
                delaySeconds?: number
        }
        declare interface ProducerFactory {
            create(opts: ProducerOpts): Producer
        }
        declare interface Producer {
            send(messages: string[], cb: ProducerCallback<void>): void,
                send(messages: ProducerMessage[], cb: ProducerCallback<void>): void,
                queueSize(cb: ProducerCallback<number>): void
        }
    }

    declare var Producer: SQSProducer.ProducerFactory;
    declare module.exports: typeof Producer
}