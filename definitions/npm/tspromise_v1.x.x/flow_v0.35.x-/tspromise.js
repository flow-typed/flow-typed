/**
 * Flowtype definitions for tspromise
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare class Thenable<T>{
    then<TR>(
        onFulfilled: (value: T) => Thenable<TR>,
        onRejected?: (error: Error) => TR): Thenable<TR>;
    then<TR>(
        onFulfilled: (value: T) => Thenable<TR>,
        onRejected?: (error: Error) => void): Thenable<TR>;
    then<TR>(
        onFulfilled: (value: T) => TR,
        onRejected?: (error: Error) => void): Thenable<TR>;
    then<TR>(
        onFulfilled: (value: T) => TR,
        onRejected?: (error: Error) => TR): Thenable<TR>;
    catch (onRejected: (error: Error) => T): Thenable<T >
}
declare interface NodeCallback<T>{
    (err: Error, value: T): void
}
declare module 'tspromise' {
    declare module.exports: typeof Promise
}
declare function yield<T>(promise: Thenable<T>): T