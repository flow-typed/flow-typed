/**
 * Flowtype definitions for angular-es
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'angular-es' {
    declare interface ClassDecorator {
        (target: TFunction): TFunction | void
    }
    declare interface MethodDecorator {
        (target: Object, propertyKey: string | , descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>| void
    }

    /**
     * Decorated target
     */
    declare type ngESDecorator = {
        (target: Object | Function, ngName?: string, ngArguments?: Array<any>, ngType?: string, injectAsProperty?: Array<string>): void
    } & ClassDecorator & MethodDecorator


    /**
     * Component interface
     * @see  https://docs.angularjs.org/guide/component
     */
    declare interface iComponent {
        template: string,
            selector: string,
            controllerAs?: string,
            require?: string,
            templateUrl?: string,
            transclude?: string,
            bindings?: Object
    }

    /**
     * Register component
     * @param  - component config
     * @returns  - decorated class
     */
    declare function Component(component: iComponent): ngESDecorator

    /**
     * Register config block
     */
    declare function Config(): ngESDecorator

    /**
     * Register constant
     * @param  - constant name
     * @returns  - decorated class
     */
    declare function Constant(name: string): ngESDecorator

    /**
     * Register controller
     * @param  - controller name
     * @returns  - decorated class
     */
    declare function Controller(name: string): ngESDecorator

    /**
     * Register decorator
     * @param  - provider name to decorate
     * @returns  - decorated class
     */
    declare function Decorator(name: string): ngESDecorator

    /**
     * Register directive
     * @param  - directive selector, can be in hyphen-case
     * @returns  - decorated class
     */
    declare function Directive(name: string): ngESDecorator

    /**
     * Register factory
     * @param  - factory name
     * @returns  - decorated class
     */
    declare function Factory(name: string): ngESDecorator

    /**
     * Register filter
     * @param  - filter name
     * @returns  - decorated class
     */
    declare function Filter(name: string): ngESDecorator

    /**
     * Add $inject property to target
     * @param  - dependencies to inject
     * @returns  - decorated class
     */
    declare function Inject(...dependencies: Array<string>): ngESDecorator

    /**
     * Inject dependencies as properties to target
     * @param  - dependencies to inject
     * @returns  - decorated class
     */
    declare function InjectAsProperty(...dependencies: Array<string>): ngESDecorator

    /**
     * Attach target to the specified module
     * @param  - module name
     * @returns  - decorated class
     */
    declare function Module(name: string): ngESDecorator

    /**
     * Register provider
     * @param  - provider name
     * @returns  - decorated class
     */
    declare function Provider(name: string): ngESDecorator

    /**
     * Register run block
     * @returns  - decorated class
     */
    declare function Run(): ngESDecorator

    /**
     * Register service
     * @param  - service name
     * @returns  - decorated class
     */
    declare function Service(name: string): ngESDecorator

    /**
     * Register value
     * @param  - value name
     * @returns  - decorated class
     */
    declare function Value(name: string): ngESDecorator
}