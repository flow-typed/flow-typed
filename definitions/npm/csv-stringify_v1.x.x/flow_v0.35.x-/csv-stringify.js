// @flow
/**
 * Flowtype definitions for csv-stringify
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'csv-stringify' {
    declare interface stringify$StringifyOpts {

        /**
         * List of fields, applied when transform returns an object, order matters, read the transformer documentation for additionnal information, columns are auto discovered when the user write object, see the "header" option on how to print columns names on the first line.
         */
        columns?: string[],

            /**
             * Set the field delimiter, one character only, defaults to a comma.
             */
            delimiter?: string,

            /**
             * Add the value of "options.rowDelimiter" on the last line, default to true.
             */
            eof?: boolean,

            /**
             * Defaults to the escape read option.
             */
            escape?: boolean,

            /**
             * Display the column names on the first line if the columns option is provided or discovered.
             */
            header?: boolean,

            /**
             * String used to delimit record rows or a special value; special values are 'auto', 'unix', 'mac', 'windows', 'unicode'; defaults to 'auto' (discovered in source or 'unix' if no source is specified).
             */
            lineBreaks?: string,

            /**
             * Defaults to the quote read option.
             */
            quote?: string,

            /**
             * Boolean, default to false, quote all the non-empty fields even if not required.
             */
            quoted?: boolean,

            /**
             * Boolean, no default, quote empty fields? If specified, overrides quotedString for empty strings.
             */
            quotedEmpty?: boolean,

            /**
             * Boolean, default to false, quote all fields of type string even if not required.
             */
            quotedString?: boolean,

            /**
             * String used to delimit record rows or a special value; special values are 'auto', 'unix', 'mac', 'windows', 'unicode'; defaults to 'auto' (discovered in source or 'unix' if no source is specified).
             */
            rowDelimiter?: string
    }

    declare type stringify$Stringifier = {
        write(line: string[] | Object): boolean,
        write(buffer: Buffer, cb?: Function): boolean,
        write(str: string, cb?: Function): boolean,
        write(str: string, encoding?: string, cb?: Function): boolean
    }
    declare module.exports: typeof stringify
}