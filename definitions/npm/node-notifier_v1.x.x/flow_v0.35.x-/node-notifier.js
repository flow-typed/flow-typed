/**
 * Flowtype definitions for node-notifier
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'node-notifier' {
    declare type nodeNotifier$NodeNotifier = {
        notify(
            notification?: WindowsBalloon$Notification,
            callback?: nodeNotifier$NotificationCallback): nodeNotifier$NodeNotifier,
        NotificationCenter: NotificationCenter,
        NotifySend: NotifySend,
        WindowsToaster: WindowsToaster,
        WindowsBalloon: WindowsBalloon,
        Growl: Growl
    }

    declare interface nodeNotifier$Notification {
        title?: string,
            message?: string,

            /**
             * Absolute path (not balloons) 
             */
            icon?: string,

            /**
             * Only Notification Center or Windows Toasters 
             */
            sound?: boolean,

            /**
             * Wait with callback until user action is taken on notification 
             */
            wait?: boolean
    }

    declare interface nodeNotifier$NotificationCallback {
        (err: any, response: any): any
    }

    declare interface nodeNotifier$Option {
        withFallback?: boolean,
            customPath?: string
    }
    declare var nodeNotifier: nodeNotifier$NodeNotifier;
    declare module.exports: typeof nodeNotifier
}
declare module 'node-notifier/notifiers/notificationcenter' {
    declare module.exports: typeof NotificationCenter
    declare interface NotificationCenter$Notification {
        title?: string,
            message?: string,

            /**
             * Absolute path (not balloons) 
             */
            icon?: string,

            /**
             * Only Notification Center or Windows Toasters 
             */
            sound?: boolean,

            /**
             * Wait with callback until user action is taken on notification 
             */
            wait?: boolean
    }
}
declare module 'node-notifier/notifiers/notifysend' {
    declare module.exports: typeof NotifySend
    declare interface NotifySend$Notification {
        title?: string,
            message?: string,

            /**
             * Absolute path (not balloons) 
             */
            icon?: string,

            /**
             * Only Notification Center or Windows Toasters 
             */
            sound?: boolean,

            /**
             * Wait with callback until user action is taken on notification 
             */
            wait?: boolean
    }
}
declare module 'node-notifier/notifiers/toaster' {
    declare module.exports: typeof WindowsToaster
}
declare module 'node-notifier/notifiers/growl' {
    declare module.exports: typeof Growl
    declare interface Growl$Option {
        withFallback?: boolean,
            customPath?: string
    }

    declare interface Growl$Notification {
        title?: string,
            message?: string,

            /**
             * Absolute path (not balloons) 
             */
            icon?: string,

            /**
             * Only Notification Center or Windows Toasters 
             */
            sound?: boolean,

            /**
             * Wait with callback until user action is taken on notification 
             */
            wait?: boolean
    }
}
declare module 'node-notifier/notifiers/balloon' {
    declare module.exports: typeof WindowsBalloon
    declare interface WindowsBalloon$Notification {
        title?: string,
            message?: string,

            /**
             * Absolute path (not balloons) 
             */
            icon?: string,

            /**
             * Only Notification Center or Windows Toasters 
             */
            sound?: boolean,

            /**
             * Wait with callback until user action is taken on notification 
             */
            wait?: boolean
    }
}