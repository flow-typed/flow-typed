/**
 * Flowtype definitions for SenchaTouch-2.2.1
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export type Ext$IXTemplateParser = {

    /**
     * [Property] (Number) 
     */
    level?: number,

    /**
     * [Method] This method is called to process lt tpl case action gt
     * @param action String
     * @param actions Object Other actions keyed by the attribute name (such as 'exec').
     */
    doCase(action?: string, actions?: any): void,

    /**
     * [Method] This method is called to process lt tpl default gt 
     */
    doDefault(): void,

    /**
     * [Method] This method is called to process lt tpl else gt 
     */
    doElse(): void,

    /**
     * [Method] This method is called to process lt tpl elseif action gt
     * @param action String
     * @param actions Object Other actions keyed by the attribute name (such as 'exec').
     */
    doElseIf(action?: string, actions?: any): void,

    /**
     * [Method] This method is called to process lt tpl gt
     * @param type String The type of action that is being ended.
     * @param actions Object The other actions keyed by the attribute name (such as 'exec').
     */
    doEnd(type?: string, actions?: any): void,

    /**
     * [Method] This method is called to process text
     * @param text String
     */
    doEval(text?: string): void,

    /**
     * [Method] This method is called to process lt tpl exec action gt
     * @param action String
     * @param actions Object Other actions keyed by the attribute name.
     */
    doExec(action?: string, actions?: any): void,

    /**
     * [Method] This method is called to process expressions like  expr
     * @param expr String The body of the expression (inside "{[" and "]}").
     */
    doExpr(expr?: string): void,

    /**
     * [Method] This method is called to process lt tpl for action gt
     * @param action String
     * @param actions Object Other actions keyed by the attribute name (such as 'exec').
     */
    doFor(action?: string, actions?: any): void,

    /**
     * [Method] This method is called to process lt tpl if action gt
     * @param action String
     * @param actions Object Other actions keyed by the attribute name (such as 'exec').
     */
    doIf(action?: string, actions?: any): void,

    /**
     * [Method] This method is called to process lt tpl switch action gt
     * @param action String
     * @param actions Object Other actions keyed by the attribute name (such as 'exec').
     */
    doSwitch(action?: string, actions?: any): void,

    /**
     * [Method] This method is called to process simple tags like tag
     * @param tag String
     */
    doTag(tag?: string): void,

    /**
     * [Method] This method is called to process a piece of raw text from the tpl
     * @param text String
     */
    doText(text?: string): void,

    /**
     * [Method] This method is called to process an empty lt tpl gt 
     */
    doTpl(): void
}