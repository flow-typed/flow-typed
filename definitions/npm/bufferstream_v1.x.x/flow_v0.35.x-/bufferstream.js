// @flow
/**
 * Flowtype definitions for bufferstream
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'bufferstream' {
    declare class BufferStream mixins stream.Duplex {
        constructor(options?: BufferStream$Opts): this;
        setSize(size: string): void;
        setSize(size: number): void;
        enable(): void;
        disable(): void;
        disable(token: string, ...tokens: string[]): void;
        disable(tokens: string[]): void;
        disable(token: Buffer, ...tokens: Buffer[]): void;
        disable(tokens: Buffer[]): void;
        split(token: string, ...tokens: string[]): void;
        split(tokens: string[]): void;
        split(token: Buffer, ...tokens: Buffer[]): void;
        split(tokens: Buffer[]): void;
        getBuffer(): Buffer;
        buffer: Buffer;
        toString(): string;
        length: number
    }
    declare     export interface BufferStream$Opts {
        encoding?: string,
            blocking?: boolean,
            size?: any,
            disabled?: boolean,
            split?: any
    }

    declare     export var fn: {
        warn: boolean
    };
}
declare module 'bufferstream/postbuffer' {
    declare module.exports: typeof PostBuffer
}