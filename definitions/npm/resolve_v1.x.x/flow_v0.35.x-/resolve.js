/**
 * Flowtype definitions for resolve
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'resolve' {

    /**
     * Callback invoked when resolving asynchronously
     * @param error 
     * @param resolved Absolute path to resolved identifier
     */
    declare type resolveCallback = (err: Error, resolved?: string) => void;

    /**
     * Callback invoked when checking if a file exists
     * @param error 
     * @param isFile If the given file exists
     */
    declare type isFileCallback = (err: Error, isFile?: boolean) => void;

    /**
     * Callback invoked when reading a file
     * @param error 
     * @param isFile If the given file exists
     */
    declare type readFileCallback = (err: Error, file?: Buffer) => void;
    declare module.exports: typeof resolve

    /**
     * Synchronously resolve the module path string id, returning the result and throwing an error when id can't be resolved.
     * @param id Identifier to resolve
     * @param options Options to use for resolving, optional.
     */
    declare function resolveSync(id: string, opts?: resolve$SyncOpts): string

    /**
     * Return whether a package is in core
     * @param id 
     */
    declare function resolveIsCore(id: string): boolean
    declare interface resolve$Opts {
        basedir?: string,
            package?: any,
            extensions?: string | string[],
            packageFilter?: (pkg: any, pkgfile: string) => any,
            pathFilter?: (pkg: any, path: string, relativePath: string) => string,
            paths?: string | string[],
            moduleDirectory?: string | string[]
    }

    declare export type resolve$AsyncOpts = {
        readFile?: (file: string, cb: readFileCallback) => void,
        isFile?: (file: string, cb: isFileCallback) => void
    } & resolve$Opts


    declare export type resolve$SyncOpts = {
        readFileSync?: (file: string) => Buffer,
        isFile?: (file: string) => boolean
    } & resolve$Opts


    declare export var sync: typeof resolveSync;

    declare export var isCore: typeof resolveIsCore;
}