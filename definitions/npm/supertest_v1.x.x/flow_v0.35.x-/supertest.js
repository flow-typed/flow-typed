/**
 * Flowtype definitions for supertest
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'supertest' {

    declare module.exports: typeof supertest

    declare var npm$namespace$supertest: {
        agent: typeof supertest$agent,
    }
    declare type supertest$Response = {}

    declare type supertest$Request = {}

    declare type supertest$CallbackHandler = (err: any, res: supertest$Response) => void;

    declare type supertest$Test = {
        app?: any,
        url: string,
        serverAddress(app: any, path: string): string,
        expect(status: number, callback?: supertest$CallbackHandler): this,
        expect(status: number, body: any, callback?: supertest$CallbackHandler): this,
        expect(body: string, callback?: supertest$CallbackHandler): this,
        expect(body: RegExp, callback?: supertest$CallbackHandler): this,
        expect(body: Object, callback?: supertest$CallbackHandler): this,
        expect(field: string, val: string, callback?: supertest$CallbackHandler): this,
        expect(fzield: string, val: RegExp, callback?: supertest$CallbackHandler): this,
        expect(checker: (res: supertest$Response) => any): this,
        end(callback?: supertest$CallbackHandler): this
    } & supertest$Request


    declare function supertest$agent(app?: any): supertest$SuperTest<supertest$Test >

        declare type supertest$SuperTest<T>= {}
}