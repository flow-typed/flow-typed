/**
 * Flowtype definitions for gulp-plumber
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'gulp-plumber' {

    /**
     * Prevent pipe breaking caused by errors from gulp plugins 
     */
    declare interface GulpPlumber {

        /**
         * Returns Stream, that fixes pipe methods on Streams that are next in pipeline.
         * @param options Sets options as described in the Options interface
         */
        (options?: Options): NodeJS.ReadWriteStream,

            /**
             * Returns Stream, that fixes pipe methods on Streams that are next in pipeline.
             * @param errorHandler the function to be attached to the stream on('error')
             */
            (errorHandler: ErrorHandlerFunction): NodeJS.ReadWriteStream,

            /**
             * returns default behaviour for pipeline after it was piped 
             */
            stop(): NodeJS.ReadWriteStream
    }
    declare interface Options {

        /**
         * Handle errors in underlying streams and output them to console. Default true.
         * If function passed, it will be attached to stream on('error')
        If false passed, error handler will not be attached
        If undefined passed, default error handler will be attached
        */
        errorHandler?: ErrorHandlerFunction | boolean,

            /**
             * Monkeypatch pipe functions in underlying streams in pipeline. Default true. 
             */
            inherit?: boolean
    }

    /**
     * an error handler function to be attached to the stream on('error') 
     */
    declare interface ErrorHandlerFunction {

        /**
         * an error handler function to be attached to the stream on('error') 
         */
        (error: any): void
    }
    declare var gulpPlumber: GulpPlumber;
    declare module.exports: typeof gulpPlumber
}