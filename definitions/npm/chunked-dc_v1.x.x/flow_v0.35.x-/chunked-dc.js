/**
 * Flowtype definitions for chunked-dc
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


/**
 * common.ts 
 */
declare interface chunkedDc$CommonStatic {
    HEADER_LENGTH: number
}


/**
 * chunker.ts 
 */
declare type chunkedDc$Chunker = {
    hasNext: boolean,
    next(): IteratorResult<Uint8Array>,
    undefined(): IterableIterator<Uint8Array >
} & IterableIterator


declare interface chunkedDc$ChunkerStatic {
    new(id: number, message: Uint8Array, chunkSize: number): chunkedDc$Chunker
}


/**
 * unchunker.ts 
 */
declare type chunkedDc$MessageListener = (message: Uint8Array, context?: any) => void;

declare interface chunkedDc$Unchunker {
    onMessage: chunkedDc$MessageListener,
        add(chunk: ArrayBuffer, context?: any): void,
        gc(maxAge: number): number
}

declare interface chunkedDc$UnchunkerStatic {
    new(): chunkedDc$Unchunker
}


/**
 * main.ts 
 */
declare interface chunkedDc$Standalone {
    Chunker: chunkedDc$ChunkerStatic,
        Unchunker: chunkedDc$UnchunkerStatic
}
declare
var chunkedDc: chunkedDc$Standalone;
declare
var Chunker: chunkedDc$ChunkerStatic;
declare
var Unchunker: chunkedDc$UnchunkerStatic;