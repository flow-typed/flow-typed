/**
 * Flowtype definitions for react-measure
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'react-measure' {

    declare module.exports: typeof Measure
    declare type Measure$MeasurementType = "width" |
        "height" |
        "top" |
        "right" |
        "bottom" |
        "left";

    declare interface Measure$Dimensions {
        width?: number,
            height?: number,
            top?: number,
            right?: number,
            bottom?: number,
            left?: number
    }

    declare type Measure$MeasureChildren = React.ReactElement<any>| {
        (dimension: Measure$Dimensions): React.ReactElement<any >
    };

    declare interface Measure$MeasureProps {

        /**
         * Tries to give the most accurate measure. Currently only works with height.
         * Measures the content rather than the actual box of the element.
         */
        accurate?: boolean,

            /**
             * Provide a list of properties to fire a callback for.
             */
            whitelist?: Measure$MeasurementType[],

            /**
             * Like whitelist, but will not fire a callback for the specified properties.
             */
            blacklist?: Measure$MeasurementType[],

            /**
             * Determines whether or not a measurement should occur.
             * @default  true
             */
            shouldMeasure?: boolean,

            /**
             * Callback when the component has been mutated. Receives dimensions, mutations, and anything passed to shouldMeasure.
             */
            onMeasure?: (dimensions: Measure$Dimensions) => void,

            /**
             * Children, ordinary JSX element or function. Leaving it for reference here
             */
            children?: Measure$MeasureChildren
    }
}