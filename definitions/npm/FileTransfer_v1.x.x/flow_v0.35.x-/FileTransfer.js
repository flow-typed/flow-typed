// @flow
/**
 * Flowtype definitions for fileTransfer
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export interface ngCordova$IFileTransferService {
    download(
            url: string,
            filePath: string,
            options?: ngCordova$IFileDownloadOptions,
            trustAllHosts?: boolean): ngCordova$IFileTransferPromise<FileEntry>,
        upload(
            url: string,
            filePath: string,
            options?: ngCordova$IFileUploadOptions,
            trustAllHosts?: boolean): ngCordova$IFileTransferPromise<FileUploadResult >
}

declare export type ngCordova$IFileTransferPromise<T>= {
    then<TResult>(
        successCallback: (promiseValue: T) => ng.IPromise<TResult>| TResult,
        errorCallback?: (error: FileTransferError) => ng.IPromise<TResult>| TResult,
        notifyCallback?: (state: any) => any): ng.IPromise<TResult>,
    catch<TResult>(
        onRejected: (error: FileTransferError) => ng.IPromise<TResult>| TResult): ng.IPromise<TResult >
}

declare export type ngCordova$IFileDownloadOptions = {
    encodeURI?: boolean,
    timeout?: number
} & FileDownloadOptions


declare export type ngCordova$IFileUploadOptions = {
    encodeURI?: boolean,
    timeout?: number
} & FileUploadOptions