// @flow
/**
 * Flowtype definitions for angular-hotkeys
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'hotkeys' {
    declare interface HotkeysProvider {
        template: string,
            templateTitle: string,
            includeCheatSheet: boolean,
            cheatSheetHotkey: string,
            cheatSheetDescription: string,
            add(
                combo: string | string[],
                callback: (event: Event, hotkey?: Hotkey) => void,
                action?: string,
                allowIn?: Array<string>,
                persistent?: boolean): undefined.Hotkey,
            add(
                combo: string | string[],
                description: string,
                callback: (event: Event, hotkey?: Hotkey) => void,
                action?: string,
                allowIn?: Array<string>,
                persistent?: boolean): undefined.Hotkey,
            add(hotkeyObj: undefined.Hotkey): undefined.Hotkey,
            bindTo(scope: ng.IScope): undefined.HotkeysProviderChained,
            del(combo: string | string[]): void,
            del(hotkeyObj: undefined.Hotkey): void,
            get(combo: string | string[]): undefined.Hotkey,
            toggleCheatSheet(): void,
            purgeHotkeys(): void
    }
    declare interface HotkeysProviderChained {
        add(
                combo: string | string[],
                description: string,
                callback: (event: Event, hotkeys: undefined.Hotkey) => void): HotkeysProviderChained,
            add(hotkeyObj: undefined.Hotkey): HotkeysProviderChained
    }
    declare interface Hotkey {
        combo: string | string[],
            description?: string,
            callback: (event: Event, hotkey: undefined.Hotkey) => void,
            action?: string,
            allowIn?: Array<string>,
            persistent?: boolean
    }
}