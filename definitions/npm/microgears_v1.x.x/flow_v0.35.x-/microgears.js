/**
 * Flowtype definitions for microgears
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


declare var npm$namespace$microgears: {
    addService: typeof microgears$addService,
    addPlugin: typeof microgears$addPlugin,
}
declare export interface microgears$Service {
    name: string,
        async?: boolean,
        pathname?: string,
        namespace: string
}

declare interface microgears$MetaInformation {
    serviceName: string,
        methodName: string,
        serviceNameSpace: string,
        extra: any
}

declare interface microgears$Plugin {
    name: string,
        beforeChain(arguments: Array<any>, metaInfo: microgears$MetaInformation): Array<any>,
        afterChain<T>(result: T, metaInfo: microgears$MetaInformation): T
}

declare function microgears$addService(service: microgears$Service): microgears$Service

declare function microgears$addPlugin(plugin: microgears$Plugin): voiddeclare module 'microgears' {
    declare module.exports: typeof microgears
}