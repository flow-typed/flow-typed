/**
 * Flowtype definitions for xml2js
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'xml2js' {
    declare module.exports: typeof xml2js

    declare var npm$namespace$xml2js: {
        parseString: typeof xml2js$parseString,
    }
    declare function xml2js$parseString(xml: string, callback: (err: any, result: any) => void): void

    declare var defaults: {
        0.1: xml2js$Options,
        0.2: xml2js$OptionsV2
    };

    declare class Builder {
        constructor(options?: xml2js$BuilderOptions): this;
        buildObject(rootObj: any): string
    }

    declare class Parser {
        constructor(options?: xml2js$Options): this;
        processAsync(): any;
        assignOrPush(obj: any, key: string, newValue: any): any;
        reset(): any;
        parseString(str: string, cb?: Function): void
    }

    declare interface xml2js$RenderOptions {
        indent?: string,
            newline?: string,
            pretty?: boolean
    }

    declare interface xml2js$XMLDeclarationOptions {
        encoding?: string,
            standalone?: boolean,
            version?: string
    }

    declare interface xml2js$BuilderOptions {
        doctype?: any,
            headless?: boolean,
            indent?: string,
            newline?: string,
            pretty?: boolean,
            renderOpts?: xml2js$RenderOptions,
            rootName?: string,
            xmldec?: xml2js$XMLDeclarationOptions
    }

    declare interface xml2js$Options {
        async?: boolean,
        attrkey?: string,
            attrNameProcessors?: [(name: string) => string],
            attrValueProcessors?: [(name: string) => string],
            charkey?: string,
            charsAsChildren?: boolean,
            childkey?: string,
            emptyTag?: any,
            explicitArray?: boolean,
            explicitCharkey?: boolean,
            explicitChildren?: boolean,
            explicitRoot?: boolean,
            ignoreAttrs?: boolean,
            mergeAttrs?: boolean,
            normalize?: boolean,
            normalizeTags?: boolean,
            strict?: boolean,
            tagNameProcessors?: [(name: string) => string],
            trim?: boolean,
            validator?: Function,
            valueProcessors?: [(name: string) => string],
            xmlns?: boolean
    }

    declare type xml2js$OptionsV2 = {
        preserveChildrenOrder?: boolean,
        rootName?: string,
        xmldec?: {
            version: string,
            encoding?: string,
            standalone?: boolean
        },
        doctype?: any,
        renderOpts?: {
            pretty?: boolean,
            indent?: string,
            newline?: string
        },
        headless?: boolean,
        chunkSize?: number,
        cdata?: boolean
    } & xml2js$Options

}