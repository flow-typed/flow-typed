/**
 * Flowtype definitions for tv4-1.2.4
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface TV4ErrorCodes {
    [key: string]: number
}
declare interface TV4Error {
    code: number,
        message: string,
        dataPath: string,
        schemaPath: string
}
declare interface TV4SchemaMap {
    [uri: string]: any
}
declare interface TV4BaseResult {
    missing: string[],
        valid: boolean
}
declare type TV4SingleResult = {
    error: TV4Error
} & TV4BaseResult
declare type TV4MultiResult = {
    errors: TV4Error[]
} & TV4BaseResult
declare interface TV4 {
    validateResult(data: any, schema: any): TV4SingleResult,
        validateMultiple(data: any, schema: any): TV4MultiResult,
        addSchema(uri: string, schema: any): boolean,
        getSchema(uri: string): any,
        normSchema(schema: any, baseUri: string): any,
        resolveUrl(base: string, href: string): string,
        freshApi(): TV4,
        dropSchemas(): void,
        reset(): void,
        getMissingUris(exp?: RegExp): string[],
        getSchemaUris(exp?: RegExp): string[],
        getSchemaMap(): TV4SchemaMap,
        errorCodes: TV4ErrorCodes
}
declare module 'tv4' {
    declare var tv4: TV4;
    declare module.exports: typeof tv4
}