// @flow
/**
 * Flowtype definitions for redux-storage
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'redux-storage' {

    declare     export var LOAD: string;
    declare     export var SAVE: string;

    /**
     * Storage engine interface
     */
    declare     export interface StorageEngine {

        /**
         * Load
         */
        load(): PromiseLike<any>,

            /**
             * Save
             * @param state 
             */
            save(state: any): PromiseLike<any >
    }
    declare     export interface StateMerger {
        (oldState: any, newState: any): any
    }

    /**
     * Storage reducer
     * @param reducer 
     * @param merger 
     */
    declare     export function reducer<TState>(reducer: Reducer<TState>, merger?: StateMerger): Reducer<TState >

        /**
         * Create storage middleware
         * @param engine 
         * @param actionBlacklist 
         * @param actionWhitelist 
         */
        declare     export function createMiddleware(
        engine: StorageEngine,
        actionBlacklist?: string[],
        actionWhitelist?: string[]): Middleware

    /**
     * Loader interface
     */
    declare interface Loader<TState>{
        (store: Store<TState>): PromiseLike<any >
    }

    /**
     * Create state loader
     * @param engine 
     */
    declare     export function createLoader<TState>(engine: StorageEngine): Loader<TState >
}
declare module 'redux-storage-decorator-filter' {

    declare interface FilterList {
        [key: number]: string | string[]
    }

    /**
     * Storage engine interface
     */
    declare     export interface StorageEngine {

        /**
         * Load
         */
        load(): PromiseLike<any>,

            /**
             * Save
             * @param state 
             */
            save(state: any): PromiseLike<any >
    }
}
declare module 'redux-storage-engine-localstorage' {

    declare     export type LocalStorageEngine = {} & StorageEngine


    /**
     * Create local storage
     * @param key localstorage key
     */
    declare     export default function createEngine(key: string): LocalStorageEngine
}
declare module 'redux-storage-engine-reactnativeasyncstorage' {

    declare     export type ReactNativeAsyncStorageEngine = {} & StorageEngine


    /**
     * Create local storage
     * @param key localstorage key
     */
    declare     export default function createEngine(key: string): LocalStorageEngine
}
declare module 'redux-storage-merger-immutablejs' {

    declare     var immutableStateMerger: StateMerger;
    declare module.exports: typeof immutableStateMerger
}