/**
 * Flowtype definitions for NProgress
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface NProgressStatic {

    /**
     * Shows the progress bar and begins trickling progress.
     * @returns  The current NProgress object, useful for chaining.
     */
    start(): NProgressStatic,

        /**
         * Finishes loading by transitioning it to 100%, then fading out.
         * @param  Forces the progress bar to show, even if it's not being shown. (The default behavior is that .done() will not do anything if .start() isn't called.)
         * @returns  The current NProgress object, useful for chaining.
         */
        done(forceShow?: boolean): NProgressStatic,

        /**
         * Increments the progress bar with a random amount. This will never get to 100%: use it for every image load (or similar).
         * @returns  The current NProgress object, useful for chaining.
         */
        inc(): NProgressStatic,

        /**
         * Increments the progress bar with a set amount.
         * @param  This will get the current status value and adds the value until status is max 0.994
         * @returns  The current NProgress object, useful for chaining.
         */
        inc(amount: number): NProgressStatic,

        /**
         * Removes the progress indicator.
         */
        remove(): void,

        /**
         * Sets the progress percentage.
         * @param  A number between 0.0 and 1.0 that represents the progress percentage.
         * @returns  The current NProgress object, useful for chaining.
         */
        set(progressPercent: number): NProgressStatic,

        /**
         * Configures the progress indicator.
         * @param  An object containing the configuration options.
         * @returns  The current NProgress object, useful for chaining.
         */
        configure(options: NProgressConfigureOptions): NProgressStatic,

        /**
         * Gets the NProgress version.
         */
        version: string,

        /**
         * Gets the status. If started, it will be the last progress number set.
         */
        status: any,

        /**
         * Gets whether progress has been started.
         * @returns  Whether the progress has started.
         */
        isStarted(): boolean
}
declare interface NProgressConfigureOptions {

    /**
     * CSS selector to change the parent DOM element of the progress. Default is body.
     */
    parent?: string,

        /**
         * The minimum progress percentage. Default is 0.08.
         */
        minimum?: number,

        /**
         * How often to trickle, in milliseconds. Default is 800.
         */
        trickleSpeed?: number,

        /**
         * Whether to show the spinner. Defaults to true. Default is true.
         */
        showSpinner?: boolean,

        /**
         * Whether to enable trickling the progress. Default is true.
         */
        trickle?: boolean,

        /**
         * The CSS easing animation to use. Default is 'linear'.
         */
        easing?: string,

        /**
         * The animation speed in milliseconds. Default is 200.
         */
        speed?: number,

        /**
         * The HTML markup inserted for the progress indicator. To keep the progress bar working, keep an element with role='bar' in there.
         */
        template?: string
}
declare var NProgress: NProgressStatic;
declare module 'nprogress' {
    declare module.exports: typeof NProgress
}