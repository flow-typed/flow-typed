/**
 * Flowtype definitions for knockout.command
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface KoliteCommand {
    canExecute: KnockoutComputed<boolean>,
        execute(...args: any[]): any
}
declare type KoliteAsyncCommand = {
    isExecuting: KnockoutObservable<boolean >
} & KoliteCommand
declare interface KoLiteCommandOptions {
    execute(...args: any[]): any,
        canExecute?: (isExecuting: boolean) => any
}
declare interface KnockoutStatic {
    command(options: KoLiteCommandOptions): KoliteCommand,
        asyncCommand(options: KoLiteCommandOptions): KoliteAsyncCommand
}
declare interface KnockoutCommandStatic {
    command(options: KoLiteCommandOptions): KoliteCommand,
        asyncCommand(options: KoLiteCommandOptions): KoliteAsyncCommand
}
declare interface KnockoutUtils {
    wrapAccessor(accessor: any): Function
}
declare interface KnockoutBindingHandlers {
    command: KnockoutBindingHandler
}
declare var kocommand: KnockoutCommandStatic;
declare module 'kocommand' {
    declare module.exports: typeof kocommand
}