/**
 * Flowtype definitions for gapi.analytics
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'client' {
    declare module 'analytics' {
        declare module 'provisioning' {
            declare         export function createAccountTicket(): Promise<any >
        }

        declare module 'data' {
            declare module 'ga' {
                declare             export function get(data?: DataQuery): Promise<any >
            }

            declare module 'mcf' {
                declare             export function get(data?: DataQuery): Promise<any >
            }

            declare module 'realtime' {
                declare             export function get(data?: DataQuery): Promise<any >
            }

        }

        declare module 'kB' {
            declare module 'parameters' {
                declare             export interface AnalyticsParameter {
                    type?: string,
                        description?: string,
                        default?: string,
                        enum?: string[],
                        enumDescriptions?: string[],
                        location?: string
                }
                declare             export class alt mixins AnalyticsParameter {}
                declare             export class fields mixins AnalyticsParameter {}
                declare             export class key mixins AnalyticsParameter {}
                declare             export class oauth_token mixins AnalyticsParameter {}
                declare             export class prettyPrint mixins AnalyticsParameter {}
                declare             export class quotaUser mixins AnalyticsParameter {}
                declare             export class userIP mixins AnalyticsParameter {}
            }

        }

        declare module 'management' {
            declare module 'accountSummaries' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'accountUserLinks' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'accounts' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'customDataSources' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'customDimensions' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'customMetrics' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'experiments' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'filters' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'goals' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'profileFilterLinks' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'profileUserLinks' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'profiles' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'remarketingAudience' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'segments' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'unsampledReports' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'uploads' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'webPropertyAdWordsLinks' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'webproperties' {
                declare             export function list(view?: View): Promise<any >
            }

            declare module 'webpropertyUserLinks' {
                declare             export function list(view?: View): Promise<any >
            }

        }

        declare module 'metadata' {
            declare module 'column' {
                declare             export function list(view?: View): Promise<any >
            }

        }

    }

}
declare interface DataQuery {
    ids?: string,
        start - date?: string,
        30 daysAgo?: string,
        end - date?: string,
        yesterday?: string,
        metrics?: string,
        dimensions?: string,
        sort?: string,
        filters?: string,
        segment?: string,
        samplingLevel?: string,
        include - empty - rows?: string,
        start - index?: string,
        max - results?: string
}
declare interface View {
    accountId?: string,
        webPropertyId?: string,
        webViewId?: string
}