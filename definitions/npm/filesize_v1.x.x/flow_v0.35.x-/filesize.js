/**
 * Flowtype definitions for filesize
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export interface Filesize$SiJedecBits {
    b?: string,
        Kb?: string,
        Mb?: string,
        Gb?: string,
        Tb?: string,
        Pb?: string,
        Eb?: string,
        Zb?: string,
        Yb?: string
}

declare export interface Filesize$SiJedecBytes {
    B?: string,
        KB?: string,
        MB?: string,
        GB?: string,
        TB?: string,
        PB?: string,
        EB?: string,
        ZB?: string,
        YB?: string
}

declare type Filesize$SiJedec = Filesize$SiJedecBits & Filesize$SiJedecBytes & {
    [name: string]: string
};

declare export interface Filesize$Options {

    /**
     * Enables bit sizes, default is false
     */
    bits?: boolean,

        /**
         * Number base, default is 2
         */
        base?: number,

        /**
         * Decimal place, default is 2
         */
        round?: number,

        /**
         * Output of function (array, exponent, object, or string), default is string
         */
        output?: string,

        /**
         * Dictionary of SI/JEDEC symbols to replace for localization, defaults to english if no match is found
         * @deprecated  : use 'symbols'
         */
        suffixes?: Filesize$SiJedec,

        /**
         * Dictionary of SI/JEDEC symbols to replace for localization, defaults to english if no match is found
         */
        symbols?: Filesize$SiJedec,

        /**
         * Specifies the SI suffix via exponent, e.g. 2 is MB for bytes, default is -1
         */
        exponent?: number,

        /**
         * Enables unix style human readable output, e.g ls -lh, default is false
         */
        unix?: boolean,

        /**
         * Character between the result and suffix, default is " "
         */
        spacer?: string
}

declare export interface Filesize$IFilesize {
    (bytes: number): string,
    (bytes: number, options: Filesize$Options): string
}
declare module 'filesize' {
    declare var fileSize: Filesize$IFilesize;
    declare module.exports: typeof fileSize
}