/**
 * Flowtype definitions for bowser
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare var bowser: BowserModule$IBowser;
declare module 'bowser' {
    declare module.exports: typeof bowser
}
declare export interface BowserModule$IBowserOS {
    mac: boolean,

        /**
         * other than Windows Phone 
         */
        windows: boolean,
        windowsphone: boolean,

        /**
         * other than android, chromeos, webos, tizen, and sailfish 
         */
        linux: boolean,
        chromeos: boolean,
        android: boolean,

        /**
         * also sets one of iphone/ipad/ipod 
         */
        ios: boolean,
        blackberry: boolean,
        firefoxos: boolean,

        /**
         * may also set touchpad 
         */
        webos: boolean,
        bada: boolean,
        tizen: boolean,
        sailfish: boolean
}

declare export interface BowserModule$IBowserVersions {
    chrome: boolean,
        firefox: boolean,
        msie: boolean,
        msedge: boolean,
        safari: boolean,
        android: boolean,
        ios: boolean,
        opera: boolean,
        phantom: boolean,
        blackberry: boolean,
        webos: boolean,
        silk: boolean,
        bada: boolean,
        tizen: boolean,
        seamonkey: boolean,
        sailfish: boolean,
        ucbrowser: boolean,
        qupzilla: boolean,
        vivaldi: boolean,
        sleipnir: boolean,
        kMeleon: boolean
}

declare export interface BowserModule$IBowserEngines {

    /**
     * IE <= 11 
     */
    msie: boolean,

        /**
         * Chrome 0-27, Android <4.4, iOs, BB, etc. 
         */
        webkit: boolean,

        /**
         * Chrome >=28, Android >=4.4, Opera, etc. 
         */
        blink: boolean,

        /**
         * Firefox, etc. 
         */
        gecko: boolean,

        /**
         * IE>11 
         */
        msedge: boolean,

        /**
         * If a tablet device is detected, the flag tablet is set instead of mobile. 
         */
        tablet: boolean,

        /**
         * All detected mobile OSes are additionally flagged mobile, unless it's a tablet 
         */
        mobile: boolean
}

declare export interface BowserModule$IBowserGrade {

    /**
     * Grade A browser 
     */
    a: boolean,

        /**
         * Grade C browser 
         */
        c: boolean,

        /**
         * Grade X browser 
         */
        x: boolean,

        /**
         * A human readable name for this browser. E.g. 'Chrome', '' 
         */
        name: string,

        /**
         * Version number for the browser. E.g. '32.0' 
         */
        version: string | number,
        osversion: string | number
}

declare export type BowserModule$IBowserDetection = {} & BowserModule$IBowserGrade & BowserModule$IBowserEngines & BowserModule$IBowserOS & BowserModule$IBowserVersions


declare export interface BowserModule$IBowserMinVersions {
    [index: string]: string
}

declare export type BowserModule$IBowser = {
    (): BowserModule$IBowserDetection,
    test(browserList: string[]): boolean,
    _detect(ua: string): BowserModule$IBowser,
    compareVersions(versions: string[]): number,
    check(
        minVersions: BowserModule$IBowserMinVersions,
        strictMode?: boolean | string,
        ua?: string): Boolean,
    isUnsupportedBrowser(
        minVersions: BowserModule$IBowserMinVersions,
        strictMode?: boolean | string,
        ua?: string): boolean
} & BowserModule$IBowserDetection