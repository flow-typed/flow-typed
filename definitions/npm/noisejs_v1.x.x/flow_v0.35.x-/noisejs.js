// @flow
/**
 * Flowtype definitions for noisejs
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare class Noise {

    /**
     * Passing in seed will seed this Noise instance
     * @param  
     * @return  Noise instance
     */
    constructor(seed?: number): this;

    /**
     * 2D simplex noise
     * @param  
     * @param  
     * @return  noise value
     */
    simplex2(x: number, y: number): number;

    /**
     * 3D simplex noise
     * @param  
     * @param  
     * @param  
     * @return  noise value
     */
    simplex3(x: number, y: number, z: number): number;

    /**
     * 2D Perlin Noise
     * @param  
     * @param  
     * @return  noise value
     */
    perlin2(x: number, y: number): number;

    /**
     * 3D Perlin Noise
     * @param  
     * @param  
     * @param  
     * @return  noise value
     */
    perlin3(x: number, y: number, z: number): number;

    /**
     * This isn't a very good seeding function, but it works ok. It supports 2^16
     * different seed values. Write something better if you need more seeds.
     * @param  [description]
     */
    seed(seed: number): void
}
declare module 'noisejs' {
    declare module.exports: typeof Noise
}