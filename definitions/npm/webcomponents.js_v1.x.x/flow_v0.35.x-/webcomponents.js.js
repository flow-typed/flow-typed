/**
 * Flowtype definitions for webcomponents.js
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export interface webcomponents$CustomElementInit {
    prototype: HTMLElement,
        extends?: string
}

declare export interface webcomponents$CustomElementConstructor {
    new(): HTMLElement
}

declare export interface webcomponents$CustomElementsPolyfill {
    hasNative: boolean,
        flags: any,
        ready: boolean,
        useNative: boolean
}

declare export interface webcomponents$HTMLImportsPolyfill {
    IMPORT_LINK_TYPE: string,
        isIE: boolean,
        flags: any,
        ready: boolean,
        rootDocument: Document,
        useNative: boolean,
        whenReady(callback: () => void): void
}

declare export type webcomponents$ShadowRootPolyfill = {
    innerHTML: string,
    host: Element
} & DocumentFragment


declare export interface webcomponents$Polyfill {
    flags: any
}
declare module 'webcomponents.js' {
    declare module.exports: typeof webcomponents
}
declare interface Element {
    createShadowRoot(): webcomponents$ShadowRootPolyfill,
        shadowRoot?: webcomponents$ShadowRootPolyfill
}
declare interface Document {
    registerElement(
        name: string,
        prototype: webcomponents$CustomElementInit): webcomponents$CustomElementConstructor
}
declare interface Window {
    CustomElements: webcomponents$CustomElementsPolyfill,
        HTMLImports: webcomponents$HTMLImportsPolyfill,
        WebComponents: webcomponents$Polyfill
}