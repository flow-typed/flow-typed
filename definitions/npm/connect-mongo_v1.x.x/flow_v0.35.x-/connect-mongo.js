/**
 * Flowtype definitions for connect-mongo
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'connect-mongo' {




    declare module.exports: typeof connectMongo
    declare export interface connectMongo$DefaultOptions {

        /**
         * The hostname of the database you are connecting to.
         * (Default: '127.0.0.1')
         */
        host?: string,

            /**
             * The port number to connect to.
             * (Default: 27017)
             */
            port?: string,

            /**
             * (Default: false)
             */
            autoReconnect?: boolean,

            /**
             * (Default: true)
             */
            ssl?: boolean,

            /**
             * (Default: 1)
             */
            w?: number,

            /**
             * The colletion of the database you are connecting to.
             * (Default: sessions)
             */
            collection?: string,

            /**
             * Serialize sessions using JSON.stringify and deserialize them with JSON.parse.
             * (Default: true)
             */
            stringify?: boolean,

            /**
             * Default: false
             */
            hash?: boolean,

            /**
             * Default: 14 days (60  60 * 24  14)
             */
            ttl?: number,

            /**
             * Automatically remove expired sessions.
             * (Default: 'native')
             */
            autoRemove?: string,

            /**
             * (Default: 10)
             */
            autoRemoveInterval?: number,

            /**
             * don't save session if unmodified
             */
            touchAfter?: number
    }

    declare export type connectMongo$MongoUrlOptions = {
        url: string,
        mongoOptions?: mongoose.ConnectionOptions
    } & connectMongo$DefaultOptions


    declare export type connectMongo$MogooseConnectionOptions = {
        mongooseConnection: mongoose.Connection
    } & connectMongo$DefaultOptions


    declare export type connectMongo$NaitiveMongoOptions = {
        db: mongodb.Db
    } & connectMongo$DefaultOptions


    declare export interface connectMongo$MongoStoreFactory {
        new(options: connectMongo$MongoUrlOptions): connectMongo$MongoStore,
        new(options: connectMongo$MogooseConnectionOptions): connectMongo$MongoStore,
        new(options: connectMongo$NaitiveMongoOptions): connectMongo$MongoStore
    }

    declare export class MongoStore mixins session.Store {
        get: (sid: string, callback: (err: any, session: Express.Session) => void) => void;
        set: (sid: string, session: Express.Session, callback: (err: any) => void) => void;
        destroy: (sid: string, callback: (err: any) => void) => void;
        length: (callback: (err: any, length: number) => void) => void;
        clear: (callback: (err: any) => void) => void;
        touch: (sid: string, session: Express.Session, callback: (err: any) => void) => void
    }
}