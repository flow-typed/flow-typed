/**
 * Flowtype definitions for i18next-express-middleware
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare type I18next$I18nextOptions = {}
    /**
     * 
     * @summary  Interface for Language detector options.
     * @interface  
     */
declare interface i18nextExpressMiddleware$LanguageDetectorOptions {
    caches?: Array<string>| boolean,
        cookieDomain?: string,
        cookieExpirationDate?: Date,
        lookupCookie?: string,
        lookupFromPathIndex?: number,
        lookupQuerystring?: string,
        lookupSession?: string,
        order?: Array<string >
}

declare type i18nextExpressMiddleware$I18nextOptions = {}
declare module 'i18next-express-middleware' {

    /**
     * 
     * @summary  Interface for middleware to use i18next in express.js.
     * @interface  
     */
    declare export interface i18nextExpressMiddleware {
        LanguageDetector(): express.Handler,
            missingKeyHandler(): express.Handler
    }

    /**
     * 
     * @summary  Interface for own detection functionality.
     */
    declare export interface i18nextCustomDetection {
        name: string,
            lookup: (req: express.Request, res: express.Response, options?: Object) => void,
            cacheUserLanguage: (
                req: express.Request,
                res: express.Response,
                lng?: any,
                options?: Object) => void
    }

    /**
     * 
     * @summary  Detects user language from current request.
     * @class  
     */
    declare export class LanguageDetector {

        /**
         * 
         * @summary  Constructor.
         * @constructor  * 
         * @param  The services.
         * @param  The options.
         * @param  The all options.
         */
        constructor(services?: any, options?: Object, allOptions?: Object): this;

        /**
         * 
         * @summary  Adds detector.
         * @param  The detector to add.
         */
        addDetector(detector: i18nextCustomDetection): void;
        cacheUserLanguage(req: express.Request, res: express.Response, detectionOrder: any): void;

        /**
         * 
         * @summary  Detects the language.
         * @param  The HTTP request.
         * @param  The HTTP response.
         * @param  The detection order.
         */
        detect(req: express.Request, res: express.Response, detectionOrder: any): void;

        /**
         * 
         * @summary  Initializes class.
         * @param  The services.
         * @param  The options.
         * @param  The all options.
         */
        init(services: any, options?: Object, allOptions?: Object): void
    }
    declare export function getResourcesHandler(i18next: I18nextStatic, options: Object): express.Handler
    declare export function handle(i18next: I18nextStatic, options?: Object): express.Handler

    /**
     * 
     * @summary  Gets handler for missing key.
     * @param  The i18next.
     * @param  The options.
     * @return  The express handler.
     */
    declare export function missingKeyHandler(i18next: I18nextStatic, options: Object): express.Handler
}