/**
 * Flowtype definitions for qrcode
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare type QRCodeOptions = {
    errorCorrectLevel?: "minimum" | "medium" | "high" | "max"
};
declare module 'qrcode' {
    declare var qrcode: {
        toDataURL(text: string, callback: (error: Error, dataURL: string) => void): void,
        toDataURL(
            text: string,
            options: QRCodeOptions,
            callback: (error: Error, dataURL: string) => void): void,
        draw(
            text: string,
            callback: (error: Error, canvas: HTMLCanvasElement) => void): void,
        draw(
            text: string,
            options: QRCodeOptions,
            callback: (error: Error, canvas: HTMLCanvasElement) => void): void,
        drawSvg(text: string, callback: (error: Error, svgString: string) => void): void,
        drawSvg(
            text: string,
            options: QRCodeOptions,
            callback: (error: Error, svgString: string) => void): void,
        save(
            path: string,
            text: string,
            callback: (error: Error, written: any) => void): void,
        save(
            path: string,
            text: string,
            options: QRCodeOptions,
            callback: (error: Error, written: any) => void): void,
        drawText(text: string, callback: (error: Error) => void): void,
        drawText(text: string, options: QRCodeOptions, callback: (error: Error) => void): void,
        drawBitArray(text: string, callback: (error: Error, bits: any, width: number) => void): void,
        drawBitArray(
            text: string,
            options: QRCodeOptions,
            callback: (error: Error, bits: any, width: number) => void): void
    };
    declare module.exports: typeof qrcode
}
declare
var QRCodeLib: {
    QRCodeDraw: {
        new(): {
            draw(
                element: HTMLCanvasElement,
                text: string,
                callback: (error: Error, canvas: HTMLCanvasElement) => void): void,
            draw(
                element: HTMLCanvasElement,
                text: string,
                options: QRCodeOptions,
                callback: (error: Error, canvas: HTMLCanvasElement) => void): void
        }
    }
};