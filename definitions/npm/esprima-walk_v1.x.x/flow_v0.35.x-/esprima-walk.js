/**
 * Flowtype definitions for esprima-walk
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'esprima-walk' {
    declare type NodeWithParent = {
        parent?: ESTree.Node
    }
    declare module.exports: typeof walk

    declare var npm$namespace$walk: {
            walk: typeof walk$walk,
            walkAddParent: typeof walk$walkAddParent,
        }
        /**
         * Walk the provided AST; fn is called once for each node with a `type`
         * @param  program to walk
         * @param  function invoked for each node with type
         */
    declare function walk$walk(ast: ESTree.Program, fn: (node: ESTree.Node) => void): void


    /**
     * Walk the provided AST; fn is called once for each node with a `type`.
     * Adds a parent property prior to invoking fn when applicable
     * @param  program to walk
     * @param  function invoked for each node
     */
    declare export function walk$walkAddParent(ast: ESTree.Program, fn: (node: NodeWithParent) => void): void
}