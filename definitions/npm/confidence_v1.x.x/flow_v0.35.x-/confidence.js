// @flow
/**
 * Flowtype definitions for confidence
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'confidence' {
    declare     export class Store {

        /**
         * 
         * @constructor  * 
         * @param  - the configuration document for this document store
         */
        constructor(document?: any): this;

        /**
         * Validates the provided configuration, clears any existing configuration, then loads the configuration where:
         *    
         * @param  - an object containing a confidence configuration object generated from a parsed JSON document. If the document is invlaid, will throw an error.
         */
        load(document: any): void;

        /**
         * Retrieves a value from the configuration document after applying the provided criteria where:
         *    
         * @param  - the requested key path. All keys must begin with '/'. '/' returns the the entire document.
         * @param  - optional object used as criteria for applying filters in the configuration document. Defaults to {}.
         * @return  Returns the value found after applying the criteria. If the key is invalid or not found, returns undefined.
         */
        get(key: string, criteria?: any): any;

        /**
         * Retrieves the metadata (if any) from the configuration document after applying the provided criteria where:
         *    
         * @param  - the requested key path. All keys must begin with '/'. '/' returns the the entire document.
         * @param  - optional object used as criteria for applying filters in the configuration document. Defaults to {}.
         * @return  Returns the metadata found after applying the criteria. If the key is invalid or not found, or if no metadata is available, returns undefined.
         */
        meta(key: string, criteria?: any): any
    }
}