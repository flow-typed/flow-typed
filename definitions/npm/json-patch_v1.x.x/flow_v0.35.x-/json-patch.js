/**
 * Flowtype definitions for json-patch
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


declare
var npm$namespace$jsonpatch: {
    apply: typeof jsonpatch$apply,
    compile: typeof jsonpatch$compile,
}
declare type jsonpatch$OpPatch = jsonpatch$AddPath |
    jsonpatch$RemovePath |
    jsonpatch$ReplacePath |
    jsonpatch$MovePath |
    jsonpatch$CopyPath |
    jsonpatch$TestPath;

declare interface jsonpatch$Patch {
    op: string
}

declare type jsonpatch$AddPath = {
    path: string,
    value: any
} & jsonpatch$Patch


declare type jsonpatch$RemovePath = {
    path: string
} & jsonpatch$Patch


declare type jsonpatch$ReplacePath = {
    path: string,
    value: any
} & jsonpatch$Patch


declare type jsonpatch$MovePath = {
    from: string,
    path: string
} & jsonpatch$Patch


declare type jsonpatch$CopyPath = {
    from: string,
    path: string
} & jsonpatch$Patch


declare type jsonpatch$TestPath = {
    path: string,
    value: any
} & jsonpatch$Patch


declare
function jsonpatch$apply(document: any, patches: jsonpatch$OpPatch[]): any

declare
function jsonpatch$compile(patches: jsonpatch$OpPatch[]): (document: any) => anydeclare module 'json-patch' {
    declare module.exports: typeof jsonpatch
}