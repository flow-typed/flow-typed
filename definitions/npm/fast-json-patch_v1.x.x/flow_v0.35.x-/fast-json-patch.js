/**
 * Flowtype definitions for fast-json-patch
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface fastjsonpatch$JsonPatch {

    /**
     * Applies an array of patch instructions to an object
     */
    apply(object: any, patches: fastjsonpatch$Patch[], validate?: boolean): boolean,

        /**
         * Observes changes made to an object, which can then be retieved using generate
         */
        observe<T>(object: T, callback?: () => void): fastjsonpatch$Observer<T>,

        /**
         * Detach an observer from an object
         */
        unobserve<T>(object: T, observer: fastjsonpatch$Observer<T>): void,

        /**
         * Generate an array of patches from an observer
         */
        generate<T>(observer: fastjsonpatch$Observer<T>): fastjsonpatch$Patch[],

        /**
         * Create an array of patches from the differences in two objects
         */
        compare(object1: any, object2: any): fastjsonpatch$Patch[],

        /**
         * Ensure a set of patch instructions is valid
         */
        validate(patches: fastjsonpatch$Patch[], tree?: any): fastjsonpatch$JsonPatchError[]
}

declare interface fastjsonpatch$Observer<T>{
    object: T,
    patches: fastjsonpatch$Patch[],
    unobserve(): void
}

declare interface fastjsonpatch$Patch {
    op: string,
        path: string,
        value?: any,
        from?: string
}

declare interface fastjsonpatch$JsonPatchError {
    name: string,
        message: string,
        index: number,
        operation: any,
        tree: any
}
declare var jsonpatch: fastjsonpatch$JsonPatch;
declare module 'fast-json-patch' {
    declare module.exports: typeof jsonpatch
}