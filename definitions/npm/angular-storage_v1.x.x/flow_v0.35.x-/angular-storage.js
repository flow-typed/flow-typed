/**
 * Flowtype definitions for angular-storage
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'a0' {
    declare module 'storage' {
        declare type IStoreService = {

            /**
             * Returns a namespaced store
             * @param  - The namespace
             * @param  - The name of the storage service. Defaults to local storage.
             * @param  - The delimiter to use to separate the namespace and the keys.
             * @returns  
             */
            getNamespacedStore(
                namespace: string,
                storage?: string,
                delimiter?: string): INamespacedStoreService
        } & INamespacedStoreService

        declare interface INamespacedStoreService {

            /**
             * Sets a new value to the storage with the key name. It can be any object.
             * @param  - The key name for the location of the value
             * @param value - The value to store
             */
            set(name: string, value: any): void,

                /**
                 * Returns the saved value with they key name.
                 * @param  - The key name for the location of the value
                 * @returns  The saved value; if you saved an object, you get an object
                 */
                get(name: string): any,

                /**
                 * Deletes the saved value with the key name
                 * @param  - The key name for the location of the value to remove
                 */
                remove(name: string): void
        }
        declare interface IStoreProvider {

            /**
             * Sets the storage.
             * @param  - The storage name
             */
            setStore(storage: string): void
        }
    }

}