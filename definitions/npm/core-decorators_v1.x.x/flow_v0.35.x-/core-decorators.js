/**
 * Flowtype definitions for core-decorators
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'core-decorators' {
    declare export interface ClassDecorator {
        (target: TFunction): TFunction | void
    }
    declare export interface ParameterDecorator {
        (target: Object, propertyKey: string | , parameterIndex: number): void
    }
    declare export interface PropertyDecorator {
        (target: Object, propertyKey: string | ): void
    }
    declare export interface MethodDecorator {
        (target: Object, propertyKey: string | , descriptor: TypedPropertyDescriptor<T>): TypedPropertyDescriptor<T>| void
    }
    declare export type PropertyOrMethodDecorator = {
        (target: Object, propertyKey: string | ): void
    } & MethodDecorator & PropertyDecorator

    declare export type Deprecate = {
        (message?: string, option?: DeprecateOption): MethodDecorator
    } & MethodDecorator

    declare export interface DeprecateOption {
        url: string
    }
    declare export interface ThrottleOptions {

        /**
         * allows to trigger function on the leading. 
         */
        leading?: boolean,

            /**
             * allows to trigger function on the trailing edge of the wait interval. 
             */
            trailing?: boolean
    }
    declare export interface Console {
        log(message?: any, ...optionalParams: any[]): void,
            time(timerName?: string): void,
            timeEnd(timerName?: string): void
    }
    declare var autobind: Function;
    declare var readonly: PropertyOrMethodDecorator;
    declare var override: MethodDecorator;
    declare var deprecate: Deprecate;
    declare var deprecated: Deprecate;
    declare var debounce: (wait: number) => MethodDecorator;
    declare var throttle: (wait: number, options?: ThrottleOptions) => MethodDecorator;
    declare var suppressWarnings: MethodDecorator;
    declare var nonenumerable: PropertyOrMethodDecorator;
    declare var nonconfigurable: PropertyOrMethodDecorator;
    declare var memoize: MethodDecorator;
    declare var decorate: (func: Function, ...args: any[]) => MethodDecorator;
    declare var lazyInitialize: PropertyDecorator;
    declare var mixin: (...mixins: any[]) => ClassDecorator;
    declare var mixins: (...mixins: any[]) => ClassDecorator;
    declare var time: (label: string, console?: Console) => MethodDecorator;
}