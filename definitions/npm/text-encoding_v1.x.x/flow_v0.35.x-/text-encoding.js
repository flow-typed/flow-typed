/**
 * Flowtype definitions for text-encoding
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface TextEncoding$TextDecoderOptions {
    fatal?: boolean,
        ignoreBOM?: boolean
}

declare interface TextEncoding$TextDecodeOptions {
    stream?: boolean
}

declare interface TextEncoding$TextEncoderOptions {
    NONSTANDARD_allowLegacyEncoding?: boolean
}

declare interface TextEncoding$TextDecoder {
    encoding: string,
        fatal: boolean,
        ignoreBOM: boolean,
        decode(input?: ArrayBufferView, options?: TextEncoding$TextDecodeOptions): string
}

declare interface TextEncoding$TextEncoder {
    encoding: string,
        encode(input?: string, options?: TextEncoding$TextEncodeOptions): Uint8Array
}

declare interface TextEncoding$TextEncodeOptions {
    stream?: boolean
}

declare interface TextEncoding$TextEncoderStatic {
    (utfLabel?: string, options?: TextEncoding$TextEncoderOptions): TextEncoding$TextEncoder,
    new(
        utfLabel?: string,
        options?: TextEncoding$TextEncoderOptions): TextEncoding$TextEncoder
}

declare interface TextEncoding$TextDecoderStatic {
    (label?: string, options?: TextEncoding$TextDecoderOptions): TextEncoding$TextDecoder,
    new(
        label?: string,
        options?: TextEncoding$TextDecoderOptions): TextEncoding$TextDecoder
}

declare interface TextEncoding$TextEncodingStatic {
    TextEncoder: TextEncoding$TextEncoderStatic,
        TextDecoder: TextEncoding$TextDecoderStatic
}
declare var TextDecoder: TextEncoding$TextDecoderStatic;
declare var TextEncoder: TextEncoding$TextEncoderStatic;
declare var TextEncoding: TextEncoding$TextEncodingStatic;
declare module 'text-encoding' {
    declare module.exports: typeof TextEncoding
}