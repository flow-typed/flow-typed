// @flow
/**
 * Flowtype definitions for i18next-browser-languagedetector
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare type I18next$I18nextStatic = {}

declare type I18next$I18nextOptions = {}
    /**
     * 
     * @summary  Interface for Language detector options.
     * @interface  
     */
declare interface i18nextBrowserLanguageDetector$LanguageDetectorOptions {
    caches?: Array<string>| boolean,
        cookieDomain?: string,
        cookieExpirationDate?: Date,
        lookupCookie?: string,
        lookupFromPathIndex?: number,
        lookupQuerystring?: string,
        lookupSession?: string,
        order?: Array<string >
}


/**
 * 
 * @summary  Interface for custom detector.
 * @interface  
 */
declare interface i18nextBrowserLanguageDetector$CustomDetector {
    name: string,
        cacheUserLanguage: (lng: string, options: Object) => void,
        lookup: (options: Object) => string
}

declare type i18nextBrowserLanguageDetector$I18nextOptions = {}

declare type i18nextBrowserLanguageDetector$I18nextStatic = {}


/**
 * 
 * @summary  i18next language detection.
 * @class  
 */
declare class LngDetector {

    /**
     * 
     * @summary  Constructor.
     * @constructor  
     */
    constructor(services?: any, options?: i18nextBrowserLanguageDetector$LanguageDetectorOptions): this;

    /**
     * 
     * @summary  Adds detector.
     * @param  The custom detector.
     */
    addDetector(
        detector: i18nextBrowserLanguageDetector$CustomDetector): i18nextBrowserLanguageDetector$LngDetector;

    /**
     * 
     * @summary  Initializes detector.
     * @param  The options.
     */
    init(options?: i18nextBrowserLanguageDetector$LanguageDetectorOptions): void
}
declare module 'i18next-browser-languagedetector' {
    declare module.exports: typeof i18nextBrowserLanguageDetector$LngDetector
}