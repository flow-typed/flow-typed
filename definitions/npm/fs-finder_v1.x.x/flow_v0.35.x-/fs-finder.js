/**
 * Flowtype definitions for fs-finder
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare type FsFinder$AsyncFunction = (paths: string | string[]) => void;

declare type FsFinder$Type = string;

declare type FsFinder$Mask = string;

declare type FsFinder$Directory = string;

declare
export class Finder mixins Base {
    TIME_FORMAT: string; in (path: string): FsFinder$Finder;
    from(path: string): FsFinder$Finder;
    find(
        path: string,
        fn?: FsFinder$AsyncFunction,
        type?: FsFinder$Type): FsFinder$Finder;
    findFiles(path?: string, fn?: FsFinder$AsyncFunction): FsFinder$Finder;
    findDirectories(path?: string, fn?: FsFinder$AsyncFunction): FsFinder$Finder;
    findFile(path?: string, fn?: FsFinder$AsyncFunction): FsFinder$Finder;
    findDirectory(path?: string, fn?: FsFinder$AsyncFunction): FsFinder$Finder;
    find(
        mask?: FsFinder$Mask,
        fn?: FsFinder$AsyncFunction,
        type?: FsFinder$Type): string[];
    findFiles(mask?: FsFinder$Mask, fn?: FsFinder$AsyncFunction): string[];
    findDirectories(mask?: FsFinder$Mask, fn?: FsFinder$AsyncFunction): string[];
    findFile(mask?: FsFinder$Mask, fn?: FsFinder$AsyncFunction): string[];
    findDirectory(mask?: FsFinder$Mask, fn?: FsFinder$AsyncFunction): string[];
    size(operation?: any, value?: any): FsFinder$Finder;
    date(operation?: any, value?: any): FsFinder$Finder
}

declare
export class Base {
    recursively(recursive?: boolean): FsFinder$Finder;
    exclude(excludes: string | string[], exactly?: boolean): FsFinder$Finder;
    showSystemFiles(systemFiles?: boolean): FsFinder$Finder;
    lookUp(up?: boolean): FsFinder$Finder;
    findFirst(findFirst?: boolean): FsFinder$Finder;
    filter(fn: Function): FsFinder$Finder;
    getPathsSync(type?: FsFinder$Type, mask?: FsFinder$Mask, dir?: FsFinder$Directory): string[];
    getPathsAsync(
        fn: FsFinder$AsyncFunction,
        type?: FsFinder$Type,
        mask?: FsFinder$Mask,
        dir?: FsFinder$Directory): void;
    checkExcludes(path: string): boolean;
    checkSystemFiles(path: string): boolean;
    checkFilters(path: string, stats: any): boolean;
    checkFile(path: string, stats: any, mask: FsFinder$Mask, type: FsFinder$Type): number;
    getPathsFromParentsSync(mask?: FsFinder$Mask, type?: FsFinder$Type): string[];
    getPathsFromParentsAsync(fn: FsFinder$AsyncFunction, mask?: FsFinder$Mask, type?: FsFinder$Type): void
}
declare module 'fs-finder' {
    declare module.exports: typeof Finder
}