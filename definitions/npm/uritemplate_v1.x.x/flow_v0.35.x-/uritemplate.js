/**
 * Flowtype definitions for uritemplate
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface uritemplate$UriTemplate {

    /**
     * Expands template into a string using parameter
     * supplied
     */
    expand(data: {}): string
}

declare interface uritemplate$UriTemplateErrorOptions {
    expressionText: string,
        message: string,
        position: number
}

declare interface uritemplate$UriTemplateError {
    new(options: uritemplate$UriTemplateErrorOptions): uritemplate$UriTemplateError
}

declare interface uritemplate$UriTemplateStatic {

    /**
     * parse template text returning instance of UriTemplate
     * @param template text
     * @return  instance of UriTemplate
     * @example  *   import UriTemplate = require('uritemplate');
    let template = UriTemplate.parse('http://localhost/query{?name,city}');
    let result   = template.expand({name: 'Jayden', city: 'Wodonga'});
    // returns http://localhost/query?name=Jayden&city=Wodonga
    */
    parse(templateText: string): uritemplate$UriTemplate,
        UriTemplateError: (options: uritemplate$UriTemplateErrorOptions) => uritemplate$UriTemplateError
}
declare module 'uritemplate' {
    declare export var UriTemplate: uritemplate$UriTemplateStatic;
}