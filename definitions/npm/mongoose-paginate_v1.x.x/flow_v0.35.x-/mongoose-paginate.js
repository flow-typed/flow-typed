/**
 * Flowtype definitions for mongoose-paginate
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'mongoose' {
    declare export interface PaginateOptions {
        select?: Object | string,
            sort?: Object | string,
            populate?: Array<Object>| Array<string>| Object | string,
            lean?: boolean,
            leanWithId?: boolean,
            offset?: number,
            page?: number,
            limit?: number
    }
    declare export interface PaginateResult<T>{
        docs: Array<T>,
        total: number,
        limit: number,
        page?: number,
        pages?: number,
        offset?: number
    }
    declare type PaginateModel<T>= {
        paginate(
            query?: Object,
            options?: PaginateOptions,
            callback?: (err: any, result: PaginateResult<T>) => void): Promise<PaginateResult<T >>
    } & Model

    declare export function model<T>(
        name: string,
        schema?: Schema,
        collection?: string,
        skipInit?: boolean): PaginateModel<T >
}
declare module 'mongoose-paginate' {
    declare var _: (schema: mongoose.Schema) => void;
    declare module.exports: typeof _
}