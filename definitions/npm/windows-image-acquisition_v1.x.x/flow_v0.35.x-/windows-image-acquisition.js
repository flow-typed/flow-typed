// @flow
/**
 * Flowtype definitions for windows-image-acquisition
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare type WIA$CommandID = "'{04E725B0-ACAE-11D2-A093-00C04F72DC3C}'" |
    "'{E208C170-ACAD-11D2-A093-00C04F72DC3C}'" |
    "'{9B26B7B2-ACAD-11D2-A093-00C04F72DC3C}'" |
    "'{AF933CAC-ACAD-11D2-A093-00C04F72DC3C}'" |
    "'{1F3B3D8E-ACAE-11D2-A093-00C04F72DC3C}'";

declare var CommandID: {
    wiaCommandChangeDocument: WIA$CommandID,
    wiaCommandDeleteAllItems: WIA$CommandID,
    wiaCommandSynchronize: WIA$CommandID,
    wiaCommandTakePicture: WIA$CommandID,
    wiaCommandUnloadDocument: WIA$CommandID
};

declare type WIA$EventID = "'{A28BBADE-64B6-11D2-A231-00C04FA31809}'" |
    "'{143E4E83-6497-11D2-A231-00C04FA31809}'" |
    "'{4C8F4EF5-E14F-11D2-B326-00C04F68CE61}'" |
    "'{1D22A559-E14F-11D2-B326-00C04F68CE61}'" |
    "'{C686DCEE-54F2-419E-9A27-2FC7F2E98F9E}'" |
    "'{C00EB793-8C6E-11D2-977A-0000F87A926F}'" |
    "'{9B2B662C-6185-438C-B68B-E39EE25E71CB}'" |
    "'{A6C5A715-8C6E-11D2-977A-0000F87A926F}'" |
    "'{FC4767C1-C8B3-48A2-9CFA-2E90CB3D3590}'" |
    "'{154E27BE-B617-4653-ACC5-0FD7BD4C65CE}'" |
    "'{A65B704A-7F3C-4447-A75D-8A26DFCA1FDF}'" |
    "'{9D095B89-37D6-4877-AFED-62A297DC6DBE}'" |
    "'{B441F425-8C6E-11D2-977A-0000F87A926F}'";

declare var EventID: {
    wiaEventDeviceConnected: WIA$EventID,
    wiaEventDeviceDisconnected: WIA$EventID,
    wiaEventItemCreated: WIA$EventID,
    wiaEventItemDeleted: WIA$EventID,
    wiaEventScanEmailImage: WIA$EventID,
    wiaEventScanFaxImage: WIA$EventID,
    wiaEventScanFilmImage: WIA$EventID,
    wiaEventScanImage: WIA$EventID,
    wiaEventScanImage2: WIA$EventID,
    wiaEventScanImage3: WIA$EventID,
    wiaEventScanImage4: WIA$EventID,
    wiaEventScanOCRImage: WIA$EventID,
    wiaEventScanPrintImage: WIA$EventID
};

declare type WIA$FormatID = "'{B96B3CAB-0728-11D3-9D7B-0000F81EF32E}'" |
    "'{B96B3CB0-0728-11D3-9D7B-0000F81EF32E}'" |
    "'{B96B3CAE-0728-11D3-9D7B-0000F81EF32E}'" |
    "'{B96B3CAF-0728-11D3-9D7B-0000F81EF32E}'" |
    "'{B96B3CB1-0728-11D3-9D7B-0000F81EF32E}'";

declare var FormatID: {
    wiaFormatBMP: WIA$FormatID,
    wiaFormatGIF: WIA$FormatID,
    wiaFormatJPEG: WIA$FormatID,
    wiaFormatPNG: WIA$FormatID,
    wiaFormatTIFF: WIA$FormatID
};

declare type WIA$Miscellaneous = "'*'" | "'{00000000-0000-0000-0000-000000000000}'";

declare var Miscellaneous: {
    wiaAnyDeviceID: WIA$Miscellaneous,
    wiaIDUnknown: WIA$Miscellaneous
};

declare interface WIA$CommonDialog {
    ShowAcquireImage: (
            DeviceType?: WiaDeviceType,
            Intent?: WiaImageIntent,
            Bias?: WiaImageBias,
            FormatID?: string,
            AlwaysSelectDevice?: boolean,
            UseCommonUI?: boolean,
            CancelError?: boolean) => WIA$ImageFile,
        ShowAcquisitionWizard: (Device: WIA$Device) => any,
        ShowDeviceProperties: (Device: WIA$Device, CancelError?: boolean) => void,
        ShowItemProperties: (Item: WIA$Item, CancelError?: boolean) => void,
        ShowPhotoPrintingWizard: (Files: any) => void,
        ShowSelectDevice: (
            DeviceType?: WiaDeviceType,
            AlwaysSelectDevice?: boolean,
            CancelError?: boolean) => WIA$Device,
        ShowSelectItems: (
            Device: WIA$Device,
            Intent?: WiaImageIntent,
            Bias?: WiaImageBias,
            SingleSelect?: boolean,
            UseCommonUI?: boolean,
            CancelError?: boolean) => WIA$Items,
        ShowTransfer: (Item: WIA$Item, FormatID?: string, CancelError?: boolean) => any
}

declare interface WIA$Device {
    Commands: WIA$DeviceCommands,
        DeviceID: string,
        Events: WIA$DeviceEvents,
        ExecuteCommand: (CommandID: string) => WIA$Item,
        GetItem: (ItemID: string) => WIA$Item,
        Items: WIA$Items,
        Properties: WIA$Properties,
        Type: WiaDeviceType,
        WiaItem: any
}

declare interface WIA$DeviceCommand {
    CommandID: string,
        Description: string,
        Name: string
}

declare interface WIA$DeviceCommands {
    Count: number,
        Item: (Index: number) => WIA$DeviceCommand
}

declare interface WIA$DeviceEvent {
    Description: string,
        EventID: string,
        Name: string,
        Type: WiaEventFlag
}

declare interface WIA$DeviceEvents {
    Count: number,
        Item: (Index: number) => WIA$DeviceEvent
}

declare interface WIA$DeviceInfo {
    Connect: () => WIA$Device,
        DeviceID: string,
        Properties: WIA$Properties,
        Type: WiaDeviceType
}

declare interface WIA$DeviceInfos {
    Count: number,
        Item: (Index: any) => WIA$DeviceInfo
}

declare interface WIA$DeviceManager {
    DeviceInfos: WIA$DeviceInfos,
        RegisterEvent: (EventID: string, DeviceID?: string) => void,
        RegisterPersistentEvent: (
            Command: string,
            Name: string,
            Description: string,
            Icon: string,
            EventID: string,
            DeviceID?: string) => void,
        UnregisterEvent: (EventID: string, DeviceID?: string) => void,
        UnregisterPersistentEvent: (
            Command: string,
            Name: string,
            Description: string,
            Icon: string,
            EventID: string,
            DeviceID?: string) => void
}

declare interface WIA$Filter {
    Description: string,
        FilterID: string,
        Name: string,
        Properties: WIA$Properties
}

declare interface WIA$FilterInfo {
    Description: string,
        FilterID: string,
        Name: string
}

declare interface WIA$FilterInfos {
    Count: number,
        Item: (Index: any) => WIA$FilterInfo
}

declare interface WIA$Filters {
    Add: (FilterID: string, Index?: number) => void,
        Count: number,
        Item: (Index: number) => WIA$Filter,
        Remove: (Index: number) => void
}

declare interface WIA$Formats {
    Count: number,
        Item: (Index: number) => string
}

declare interface WIA$ImageFile {
    ActiveFrame: number,
        ARGBData: WIA$Vector,
        FileData: WIA$Vector,
        FileExtension: string,
        FormatID: string,
        FrameCount: number,
        Height: number,
        HorizontalResolution: number,
        IsAlphaPixelFormat: boolean,
        IsAnimated: boolean,
        IsExtendedPixelFormat: boolean,
        IsIndexedPixelFormat: boolean,
        LoadFile: (Filename: string) => void,
        PixelDepth: number,
        Properties: WIA$Properties,
        SaveFile: (Filename: string) => void,
        VerticalResolution: number,
        Width: number
}

declare interface WIA$ImageProcess {
    Apply: (Source: WIA$ImageFile) => WIA$ImageFile,
        FilterInfos: WIA$FilterInfos,
        Filters: WIA$Filters
}

declare interface WIA$Item {
    Commands: WIA$DeviceCommands,
        ExecuteCommand: (CommandID: string) => WIA$Item,
        Formats: WIA$Formats,
        ItemID: string,
        Items: WIA$Items,
        Properties: WIA$Properties,
        Transfer: (FormatID?: string) => any,
        WiaItem: any
}

declare interface WIA$Items {
    Add: (Name: string, Flags: number) => void,
        Count: number,
        Item: (Index: number) => WIA$Item,
        Remove: (Index: number) => void
}

declare interface WIA$Properties {
    Count: number,
        Exists: (Index: any) => boolean,
        Item: (Index: any) => WIA$Property
}

declare interface WIA$Property {
    IsReadOnly: boolean,
        IsVector: boolean,
        Name: string,
        PropertyID: number,
        SubType: WiaSubType,
        SubTypeDefault: any,
        SubTypeMax: number,
        SubTypeMin: number,
        SubTypeStep: number,
        SubTypeValues: WIA$Vector,
        Type: number,
        Value: any
}

declare interface WIA$Rational {
    Denominator: number,
        Numerator: number,
        Value: number
}

declare interface WIA$Vector {
    Add: (Value: any, Index?: number) => void,
        BinaryData: any,
        Clear: () => void,
        Count: number,
        Date: VarDate,
        ImageFile: (Width?: number, Height?: number) => WIA$ImageFile,
        Item: (Index: number) => any,
        Picture: (Width?: number, Height?: number) => any,
        Remove: (Index: number) => any,
        SetFromString: (Value: string, Resizable?: boolean, Unicode?: boolean) => void,
        String: (Unicode?: boolean) => string
}
declare interface ActiveXObject {
    new(progID: "WIA.Rational"): WIA$Rational,
    new(progID: "WIA.Vector"): WIA$Vector,
    new(progID: "WIA.ImageFile"): WIA$ImageFile,
    new(progID: "WIA.ImageProcess"): WIA$ImageProcess,
    new(progID: "WIA.CommonDialog"): WIA$CommonDialog,
    new(progID: "WIA.DeviceManager"): WIA$DeviceManager
}