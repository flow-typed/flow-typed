/**
 * Flowtype definitions for msgpack
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface MsgPackStatic {

    /**
     * 
     * @param data string or ByteArray.
     * @param toString return string value if true.
     * @return  string or ByteArray or false. pack failed if false.
     */
    pack(data: any, toString?: boolean): any,

        /**
         * 
         * @param data string or ByteArray.
         * @return  string or ByteArray or undefined. unpack failed if undefined.
         */
        unpack(data: any): any,
        worker: string,
        upload(
            url: string,
            option: MsgPackUploadOption,
            callback: MsgPackUploadCallback): void,
        download(
            url: string,
            option: MsgPackDownloadOption,
            callback: MsgPackDownloadCallback): void
}
declare interface MsgPackUploadOption {

    /**
     * string or ByteArray
     */
    data: any,

        /**
         * use WebWorker if true.
         */
        worker?: boolean,

        /**
         * timeout sec.
         */
        timeout?: number,
        before?: (xhr: XMLHttpRequest, option: MsgPackUploadOption) => void,
        after?: (
            xhr: XMLHttpRequest,
            option: MsgPackUploadOption,
            result: MsgPackCallbackResult) => void
}
declare interface MsgPackUploadCallback {
    (data: string, option: MsgPackUploadOption, result: MsgPackCallbackResult): void
}
declare interface MsgPackDownloadOption {

    /**
     * use WebWorker if true.
     */
    worker?: boolean,

        /**
         * timeout sec.
         */
        timeout?: number,
        before?: (xhr: XMLHttpRequest, option: MsgPackDownloadOption) => void,
        after?: (
            xhr: XMLHttpRequest,
            option: MsgPackDownloadOption,
            result: MsgPackCallbackResult) => void
}
declare interface MsgPackDownloadCallback {

    /**
     * 
     * @param data string or ByteArray
     */
    (data: any, option: MsgPackDownloadCallback, result: MsgPackCallbackResult): void
}
declare interface MsgPackCallbackResult {
    status: number,
        ok: boolean
}
declare var msgpack: MsgPackStatic;