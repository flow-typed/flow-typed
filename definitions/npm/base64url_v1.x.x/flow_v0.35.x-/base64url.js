/**
 * Flowtype definitions for base64url
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


/**
 * For encoding and decoding base64url!
 * v2.0.0Encoding type
 */
declare type Encoding = "ascii" |
    "utf8" |
    "utf16le" |
    "ucs2" |
    "utf16le" |
    "base64" |
    "binary" |
    "hex";
declare interface IBase64Url {

    /**
     * Encode input to base64url
     * @param  Incoming input 
     * @param  Default 'utf8'
     * @return  
     */
    (input: string, encoding?: Encoding): string,

    /**
     * Encode input to base64url
     * @param  Incoming value 
     */
    (inout: Buffer): string,

    /**
     * Encode input to base64url
     * @param  Incoming input 
     * @param  Default 'utf8'
     * @returns  
     */
    encode(input: string, encoding?: Encoding): string,

        /**
         * Encode input to base64url
         * @param  Incoming value 
         */
        encode(input: Buffer): string,

        /**
         * Convert a base64url encoded string into a raw string.
         * @param  base64url encoded string 
         * @param  Encoding defaults to 'utf8'
         * @returns  
         */
        decode(base64url: string, encoding?: string): string,

        /**
         * Convert a base64url encoded string to a base64 encoded string
         * @param  base64url encoded value 
         * @returns  
         */
        toBase64(base64url: string | Buffer): string,

        /**
         * Convert a base64 encoded string to a base64url encoded string
         * @param  encoded string
         * @returns  
         */
        fromBase64(base64: string): string,

        /**
         * Convert a base64url encoded string to a Buffer
         * @param  encoded string 
         * @returns  
         */
        toBuffer(base64url: string): Buffer
}
declare module 'base64url' {
    declare var base64url: IBase64Url;
    declare module.exports: typeof base64url
}