/**
 * Flowtype definitions for express-brute
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'express-brute' {

    /**
     * 
     * @summary  Options for {
     * @link  MemoryStore} class.
     * @interface  
     */
    declare interface MemoryStoreOptions {

        /**
         * 
         * @summary  Key prefix.
         * @type  
         */
        prefix: string
    }

    /**
     * 
     * @summary  Options for {
     * @link  ExpressBrute#getMiddleware} class.
     * @interface  
     */
    declare interface ExpressBruteMiddleware {

        /**
         * 
         * @summary  Allows you to override the value of failCallback for this middleware.
         * @type  
         */
        failCallback: Function,

            /**
             * 
             * @summary  Disregard IP address when matching requests if set to true. Defaults to false.
             * @type  
             */
            ignoreIP: boolean,

            /**
             * 
             * @summary  Key.
             * @type  
             */
            key: any
    }

    /**
     * 
     * @summary  Options for {
     * @link  ExpressBrute} class.
     * @interface  
     */
    declare interface ExpressBruteOptions {
        freeRetries?: number,
            proxyDepth?: number,
            attachResetToRequest?: boolean,
            refreshTimeoutOnRequest?: boolean,
            minWait?: number,
            maxWait?: number,
            lifetime?: number,
            failCallback?: (
                req: express.Request,
                res: express.Response,
                next: Function,
                nextValidRequestDate: any) => void,
            handleStoreError?: any
    }
    declare module.exports: typeof ExpressBrute

    /**
     * 
     * @summary  In-memory store.
     * @class  
     */
    declare export class MemoryStore {

        /**
         * 
         * @summary  Constructor.
         * @constructor  * 
         * @param  The options.
         */
        constructor(options?: MemoryStoreOptions): this;

        /**
         * 
         * @summary  Gets key value.
         * @param  The key name.
         * @param  The callback.
         */
        get(key: string, callback: (error: any, data: Object) => void): void;

        /**
         * 
         * @summary  Sets the key value.
         * @param  The name.
         * @param  The value.
         * @param  The lifetime.
         * @param  The callback.
         */
        set(
            key: string,
            value: any,
            lifetime: number,
            callback: (error: any) => void): void;

        /**
         * 
         * @summary  Deletes the key.
         * @param  The name.
         * @param  The callback.
         */
        reset(key: string, callback: (error: any) => void): void
    }
}