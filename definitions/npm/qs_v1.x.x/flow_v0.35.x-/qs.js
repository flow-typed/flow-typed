/**
 * Flowtype definitions for qs
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


declare var npm$namespace$QueryString: {
    stringify: typeof QueryString$stringify,
    parse: typeof QueryString$parse,
}
declare interface QueryString$IStringifyOptions {
    delimiter?: string,
        strictNullHandling?: boolean,
        skipNulls?: boolean,
        encode?: boolean,
        encoder?: (str: string) => any,
        filter?: Array<string | number>| ((prefix: string, value: any) => any),
        arrayFormat?: "indices" | "brackets" | "repeat",
        indices?: boolean
}

declare interface QueryString$IParseOptions {
    delimiter?: string | RegExp,
        depth?: number,
        decoder?: (str: string) => any,
        arrayLimit?: number,
        parseArrays?: boolean,
        allowDots?: boolean,
        plainObjects?: boolean,
        allowPrototypes?: boolean,
        parameterLimit?: number,
        strictNullHandling?: boolean
}

declare function QueryString$stringify(obj: any, options?: QueryString$IStringifyOptions): string

declare function QueryString$parse(str: string, options?: QueryString$IParseOptions): anydeclare module 'qs' {
    declare module.exports: typeof QueryString
}