/**
 * Flowtype definitions for dragula
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface dragula$DragulaOptions {
    containers?: Element[],
        isContainer?: (el?: Element) => boolean,
        moves?: (el?: Element, container?: Element, handle?: Element) => boolean,
        accepts?: (el?: Element, target?: Element, source?: Element, sibling?: Element) => boolean,
        invalid?: (el?: Element, target?: Element) => boolean,
        direction?: string,
        copy?: boolean,
        revertOnSpill?: boolean,
        removeOnSpill?: boolean,
        delay?: boolean | number,
        mirrorContainer?: Element
}

declare interface dragula$Drake {
    containers: Element[],
        dragging: boolean,
        start(item: Element): void,
        end(): void,
        cancel(revert: boolean): void,
        cancel(): void,
        remove(): void,
        on(events: string, callback: Function): void,
        destroy(): void
}

declare interface dragula$Dragula {
    (containers: Element[], options: dragula$DragulaOptions): dragula$Drake,
    (containers: Element, options: dragula$DragulaOptions): dragula$Drake,
    (containers: Element[]): dragula$Drake,
    (options: dragula$DragulaOptions): dragula$Drake,
    (): dragula$Drake
}
declare var dragula: dragula$Dragula;
declare module 'dragula' {
    declare module.exports: typeof dragula
}