/**
 * Flowtype definitions for lru-cache
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'lru-cache' {
    declare module.exports: typeof LRU
    declare interface LRU$Options<T>{
        max?: number,
        maxAge?: number,
        length?: (value: T) => number,
        dispose?: (key: any, value: T) => void,
        stale?: boolean
    }

    declare interface LRU$Cache<T>{
        set(key: any, value: T, maxAge?: number): void,
        get(key: any): T,
        peek(key: any): T,
        has(key: any): boolean,
        del(key: any): void,
        reset(): void,
        prune(): void,
        forEach(iter: (value: T, key: any, cache: LRU$Cache<T>) => void, thisp?: any): void,
        itemCount: number,
        length: number,
        keys(): any[],
        values(): T[]
    }
}