// @flow
/**
 * Flowtype definitions for scroll-into-view
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module '___ScrollIntoView' {
    declare interface Settings {
        time?: number,
            ease?: (value: number) => number,
            validTarget?: (target: HTMLElement, parentsScrolled: number) => boolean,
            align?: Alignment
    }
    declare interface Alignment {

        /**
         * 0 to 1, default 0.5 (center) 
         */
        top?: number,

            /**
             * 0 to 1, default 0.5 (center) 
             */
            left?: number
    }

    /**
     * type will be 'complete' if the scroll completed or 'canceled' if the current scroll was canceled by a new scroll 
     */
    declare type callbackParamterType = "complete" | "canceled";
    declare type Callback = (type: callbackParamterType) => void;
    declare interface ScrollIntoView {
        (target: HTMLElement, callback?: ___ScrollIntoView.Callback): void,
        (target: HTMLElement, settings: ___ScrollIntoView.Settings, callback?: ___ScrollIntoView.Callback): void
    }
}
declare module 'scroll-into-view' {
    declare     var scrollIntoView: ___ScrollIntoView.ScrollIntoView;
    declare module.exports: typeof scrollIntoView
}