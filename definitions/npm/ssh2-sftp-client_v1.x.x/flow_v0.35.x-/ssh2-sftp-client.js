// @flow
/**
 * Flowtype definitions for ssh2-sftp-client
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'ssh2-sftp-client' {

    declare interface sftp$FileInfo {
        type: string,
            name: string,
            size: number,
            modifyTime: number,
            accessTime: number,
            rights: {
                user: string,
                group: string,
                other: string
            },
            owner: number,
            group: number
    }

    declare interface sftp$Client {
        new(): sftp$Client,
        connect(options: ssh2.ConnectConfig): Promise<void>,
            list(remoteFilePath: string): Promise<Array<sftp$FileInfo >> ,
            get(
                remoteFilePath: string,
                useCompression?: boolean): Promise<NodeJS.ReadableStream>,
            put(
                localFilePath: string,
                remoteFilePath: string,
                useCompression?: boolean): Promise<void>,
            put(
                buffer: Buffer,
                remoteFilePath: string,
                useCompression?: boolean): Promise<void>,
            put(
                stream: NodeJS.ReadableStream,
                remoteFilePath: string,
                useCompression?: boolean): Promise<void>,
            mkdir(remoteFilePath: string, recursive?: boolean): Promise<void>,
            delete(remoteFilePath: string): Promise<void>,
            remove(remoteSourcePath: string, remoteDestPath: string): Promise<void>,
            end(): Promise<void >
    }
    declare     var sftp: sftp$Client;
    declare module.exports: typeof sftp
}