// @flow
/**
 * Flowtype definitions for angular-google-analytics
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'google' {
    declare module 'analytics' {

        /**
         * 
         * @summary  Interface for {
         * @link  AnalysticsProvider}.
         * @interface  
         */
        declare interface AnalyticsProvider {

            /**
             * 
             * @summary  Use Delay Script Tag Insertion.
             * @param  If true, the delay script tag is inserted.
             * @return  The object instance.
             */
            delayScriptTag(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Activates the test mode.
                 */
                enterTestMode(): void,

                /**
                 * 
                 * @summary  Gets the global cookie configuration.
                 * @return  The global cookie configuration.
                 */
                getCookieConfig(): Object,

                /**
                 * 
                 * @summary  Ignore first page view.
                 * @param  If true, the first page view is ignored.
                 * @return  The object instance.
                 */
                ignoreFirstPageLoad(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Enable Service Logging.
                 * @param  If true, log all outbound calls to an in-memory array accessible.
                 * @return  The object instance.
                 */
                logAllCalls(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Set Google Analytics Accounts.
                 * @param  The account identifier(s).
                 * @return  The object instance.
                 */
                setAccount(tracker: string | Object | Array<Object>): AnalyticsProvider,

                /**
                 * 
                 * @summary  Set Cookie Configuration.
                 * @param  The custom cookie parameters.
                 * @return  The object instance.
                 * @deprecated  
                 */
                setCookieConfig(config: Object): AnalyticsProvider,

                /**
                 * 
                 * @summary  Set cross-linked domains.
                 * @param  The domains.
                 * @return  The object instance.
                 */
                setCrossLinkDomains(domains: Array<string>): AnalyticsProvider,

                /**
                 * 
                 * @summary  Set currency.
                 * @param  The currency code.
                 * @return  The object instance.
                 */
                setCurrency(currencyCode: string): AnalyticsProvider,

                /**
                 * 
                 * @summary  Set Domain Name.
                 * @param  The domain name.
                 * @return  The object instance.
                 */
                setDomainName(domain: string): AnalyticsProvider,

                /**
                 * 
                 * @summary  Enable Experiment (universal analytics only).
                 * @param  The experiment identifier.
                 * @return  The object instance.
                 */
                setExperimentId(id: string): AnalyticsProvider,

                /**
                 * 
                 * @summary  Support Hybrid Mobile Applications.
                 * @param  If true, each account object will disable protocol checking and all injected scripts will use the HTTPS protocol.
                 */
                setHybridMobileSupport(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Set the default page event name.
                 * @param  The default page event name.
                 * @return  The object instance.
                 */
                setPageEvent(name: string): AnalyticsProvider,

                /**
                 * 
                 * @summary  Sets the regex to scrub location before sending to analytics.
                 * @return  The object instance.
                 * @param  The regex.
                 */
                setRemoveRegExp(regex: RegExp): AnalyticsProvider,

                /**
                 * 
                 * @summary  Starts the offline mode.
                 * @param  If true, the offline mode is started.
                 * @return  The object instance.
                 */
                startOffline(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Track all routes.
                 * @param  If true, all routes are tracked.
                 * @return  The object instance.
                 */
                trackPages(doTrack: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Sets the URL prefix.
                 * @param  The URL prefix.
                 * @return  The object instance.
                 */
                trackPrefix(prefix: string): AnalyticsProvider,

                /**
                 * 
                 * @summary  Track all URL query parameters.
                 * @param  If true, all URL query parameters are tracked.
                 * @return  The object instance.
                 */
                trackUrlParams(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Use Classic Analytics.
                 * @param  If true, use classic analytics.
                 * @return  The object instance.
                 */
                useAnalytics(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Use Cross Domain Linking.
                 * @param  If true, the cross-linked domains are registered with Google Analytics.
                 * @return  The object instance.
                 */
                useCrossDomainLinker(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Use Display Features.
                 * @param  If true, the display features module is loaded with Google Analytics.
                 * @return  The object instance.
                 */
                useDisplayFeatures(val: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Enable enhanced e-commerce module.
                 * @param  If true, the enhanced e-commerce module is enabled.
                 * @param  If true, the "ec.js" file is used, otherwises, the "ecommerce.js" is used.
                 * @return  The object instance.
                 */
                useECommerce(val: boolean, enhanced: boolean): AnalyticsProvider,

                /**
                 * 
                 * @summary  Use Enhanced Link Attribution.
                 * @param  If true, the enhanced link attribution module is loaded with Google Analytics.
                 * @return  The object instance.
                 */
                useEnhancedLinkAttribution(val: boolean): AnalyticsProvider
        }
    }

}