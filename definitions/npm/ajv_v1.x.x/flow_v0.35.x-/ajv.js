/**
 * Flowtype definitions for ajv
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'ajv' {
    declare module.exports: typeof Ajv
    declare type Ajv$AjvOptions = {
        v5?: boolean,
        allErrors?: boolean,
        verbose?: boolean,
        jsonPointers?: boolean,
        uniqueItems?: boolean,
        unicode?: boolean,
        format?: string,
        formats?: any,
        schemas?: any,
        missingRefs?: boolean,
        loadSchema(uri: string, callback: (error: Error, body: any) => void): void,
        removeAdditional?: boolean,
        useDefaults?: boolean,
        coerceTypes?: boolean,
        async?: any,
        transpile?: string,
        meta?: boolean,
        validateSchema?: boolean,
        addUsedSchema?: boolean,
        inlineRefs?: boolean,
        passContext?: boolean,
        loopRequired?: number,
        ownProperties?: boolean,
        multipleOfPrecision?: boolean | number,
        errorDataPath?: string,
        messages?: boolean,
        beautify?: boolean,
        cache?: any
    };

    declare type Ajv$AjvValidate = ((data: any) => boolean | PromiseLike<boolean>) & {
        errors: Ajv$ValidationError[]
    };

    declare type Ajv$AjxKeywordDefinition = {
        async?: boolean,
        type: string,
        compile?: (
            schema: any,
            parentsSchema: any) => ((data: any) => boolean | PromiseLike<boolean>),
        validate?: (schema: any, data: any) => boolean
    };

    declare type Ajv$ValidationError = {
        keyword: string,
        dataPath: string,
        schemaPath: string,
        params: any,
        message: string,
        schema: any,
        parentSchema: any,
        data: any
    };
}