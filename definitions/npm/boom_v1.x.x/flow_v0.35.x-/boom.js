/**
 * Flowtype definitions for boom
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


declare var npm$namespace$Boom: {
    wrap: typeof Boom$wrap,
    create: typeof Boom$create,
    badRequest: typeof Boom$badRequest,
    unauthorized: typeof Boom$unauthorized,
    forbidden: typeof Boom$forbidden,
    notFound: typeof Boom$notFound,
    methodNotAllowed: typeof Boom$methodNotAllowed,
    notAcceptable: typeof Boom$notAcceptable,
    proxyAuthRequired: typeof Boom$proxyAuthRequired,
    clientTimeout: typeof Boom$clientTimeout,
    conflict: typeof Boom$conflict,
    resourceGone: typeof Boom$resourceGone,
    lengthRequired: typeof Boom$lengthRequired,
    preconditionFailed: typeof Boom$preconditionFailed,
    entityTooLarge: typeof Boom$entityTooLarge,
    uriTooLong: typeof Boom$uriTooLong,
    unsupportedMediaType: typeof Boom$unsupportedMediaType,
    rangeNotSatisfiable: typeof Boom$rangeNotSatisfiable,
    expectationFailed: typeof Boom$expectationFailed,
    badData: typeof Boom$badData,
    locked: typeof Boom$locked,
    preconditionRequired: typeof Boom$preconditionRequired,
    tooManyRequests: typeof Boom$tooManyRequests,
    illegal: typeof Boom$illegal,
    badImplementation: typeof Boom$badImplementation,
    notImplemented: typeof Boom$notImplemented,
    badGateway: typeof Boom$badGateway,
    serverUnavailable: typeof Boom$serverUnavailable,
    gatewayTimeout: typeof Boom$gatewayTimeout,
}
declare export interface Boom$BoomError {
    data: any,
        reformat: () => void,
        isBoom: boolean,
        isServer: boolean,
        message: string,
        output: Boom$Output
}

declare export interface Boom$Output {
    statusCode: number,
        headers: any,
        payload: any
}

declare export function Boom$wrap(error: Error, statusCode?: number, message?: string): Boom$BoomError

declare export function Boom$create(statusCode: number, message?: string, data?: any): Boom$BoomError

declare export function Boom$badRequest(message?: string, data?: any): Boom$BoomError

declare export function Boom$unauthorized(message?: string, scheme?: any, attributes?: any): Boom$BoomError

declare export function Boom$forbidden(message?: string, data?: any): Boom$BoomError

declare export function Boom$notFound(message?: string, data?: any): Boom$BoomError

declare export function Boom$methodNotAllowed(message?: string, data?: any): Boom$BoomError

declare export function Boom$notAcceptable(message?: string, data?: any): Boom$BoomError

declare export function Boom$proxyAuthRequired(message?: string, data?: any): Boom$BoomError

declare export function Boom$clientTimeout(message?: string, data?: any): Boom$BoomError

declare export function Boom$conflict(message?: string, data?: any): Boom$BoomError

declare export function Boom$resourceGone(message?: string, data?: any): Boom$BoomError

declare export function Boom$lengthRequired(message?: string, data?: any): Boom$BoomError

declare export function Boom$preconditionFailed(message?: string, data?: any): Boom$BoomError

declare export function Boom$entityTooLarge(message?: string, data?: any): Boom$BoomError

declare export function Boom$uriTooLong(message?: string, data?: any): Boom$BoomError

declare export function Boom$unsupportedMediaType(message?: string, data?: any): Boom$BoomError

declare export function Boom$rangeNotSatisfiable(message?: string, data?: any): Boom$BoomError

declare export function Boom$expectationFailed(message?: string, data?: any): Boom$BoomError

declare export function Boom$badData(message?: string, data?: any): Boom$BoomError

declare export function Boom$locked(message?: string, data?: any): Boom$BoomError

declare export function Boom$preconditionRequired(message?: string, data?: any): Boom$BoomError

declare export function Boom$tooManyRequests(message?: string, data?: any): Boom$BoomError

declare export function Boom$illegal(message?: string, data?: any): Boom$BoomError

declare export function Boom$badImplementation(message?: string, data?: any): Boom$BoomError

declare export function Boom$notImplemented(message?: string, data?: any): Boom$BoomError

declare export function Boom$badGateway(message?: string, data?: any): Boom$BoomError

declare export function Boom$serverUnavailable(message?: string, data?: any): Boom$BoomError

declare export function Boom$gatewayTimeout(message?: string, data?: any): Boom$BoomErrordeclare module 'boom' {
    declare module.exports: typeof Boom
}