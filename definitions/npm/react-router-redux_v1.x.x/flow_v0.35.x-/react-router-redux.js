// @flow
/**
 * Flowtype definitions for react-router-redux
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


declare var npm$namespace$ReactRouterRedux: {
    routerReducer: typeof ReactRouterRedux$routerReducer,
    syncHistoryWithStore: typeof ReactRouterRedux$syncHistoryWithStore,
    routerMiddleware: typeof ReactRouterRedux$routerMiddleware,
}
declare var CALL_HISTORY_METHOD: string;

declare var LOCATION_CHANGE: string;

declare var push: ReactRouterRedux$PushAction;

declare var replace: ReactRouterRedux$ReplaceAction;

declare var go: ReactRouterRedux$GoAction;

declare var goBack: ReactRouterRedux$GoForwardAction;

declare var goForward: ReactRouterRedux$GoBackAction;

declare var routerActions: ReactRouterRedux$RouteActions;

declare type ReactRouterRedux$LocationDescriptor = H.LocationDescriptor;

declare type ReactRouterRedux$PushAction = (
    nextLocation: ReactRouterRedux$LocationDescriptor) => ReactRouterRedux$RouterAction;

declare type ReactRouterRedux$ReplaceAction = (
    nextLocation: ReactRouterRedux$LocationDescriptor) => ReactRouterRedux$RouterAction;

declare type ReactRouterRedux$GoAction = (n: number) => ReactRouterRedux$RouterAction;

declare type ReactRouterRedux$GoForwardAction = () => ReactRouterRedux$RouterAction;

declare type ReactRouterRedux$GoBackAction = () => ReactRouterRedux$RouterAction;

declare type ReactRouterRedux$RouterAction = {
    type: string,
    payload?: ReactRouterRedux$LocationDescriptor
};

declare interface ReactRouterRedux$RouteActions {
    push: ReactRouterRedux$PushAction,
        replace: ReactRouterRedux$ReplaceAction,
        go: ReactRouterRedux$GoAction,
        goForward: ReactRouterRedux$GoForwardAction,
        goBack: ReactRouterRedux$GoBackAction
}

declare type ReactRouterRedux$ReactRouterReduxHistory = {
    unsubscribe(): void
}

declare type ReactRouterRedux$DefaultSelectLocationState = {
    (state: any): any
} & Function


declare interface ReactRouterRedux$SyncHistoryWithStoreOptions {
    selectLocationState?: ReactRouterRedux$DefaultSelectLocationState,
        adjustUrlOnReplay?: boolean
}

declare function ReactRouterRedux$routerReducer(state?: any, options?: any): R.Reducer<any >

    declare function ReactRouterRedux$syncHistoryWithStore(
    history: H.History,
    store: R.Store<any>,
    options?: ReactRouterRedux$SyncHistoryWithStoreOptions): ReactRouterRedux$ReactRouterReduxHistory

declare function ReactRouterRedux$routerMiddleware(history: H.History): R.Middlewaredeclare module 'react-router-redux' {
    declare module.exports: typeof ReactRouterRedux
}