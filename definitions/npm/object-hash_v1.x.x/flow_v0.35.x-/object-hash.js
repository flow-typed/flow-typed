/**
 * Flowtype definitions for object-hash
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare
export interface ObjectHash$IOptions {
    algorithm?: string,
        encoding?: string,
        excludeValues?: boolean
}

declare interface ObjectHash$HashTableItem {
    value: any,
        count: number
}

declare type ObjectHash$HashTableItemWithKey = {
    hash: string
} & ObjectHash$HashTableItem


declare
export interface ObjectHash$HashTable {
    add(...values: any[]): ObjectHash$HashTable,
        remove(...values: any[]): ObjectHash$HashTable,
        hasKey(key: string): boolean,
        getValue(key: string): any,
        getCount(key: string): number,
        table(): {
            [key: string]: ObjectHash$HashTableItem
        },
        toArray(): ObjectHash$HashTableItemWithKey[],
        reset(): ObjectHash$HashTable
}

declare
export interface ObjectHash$HashTableStatic {
    (options?: ObjectHash$IOptions): ObjectHash$HashTable
}

declare
export interface ObjectHash$Hash {
    (object: any, options?: ObjectHash$IOptions): string,
    sha1(object: any): string,
        keys(object: any): string,
        MD5(object: any): string,
        keysMD5(object: any): string,
        HashTable: ObjectHash$HashTableStatic
}

declare
export var HashStatic: ObjectHash$Hash;
declare module 'object-hash' {
    declare module.exports: typeof HashStatic
}