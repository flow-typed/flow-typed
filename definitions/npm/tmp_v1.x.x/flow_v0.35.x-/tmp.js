/**
 * Flowtype definitions for tmp
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'tmp' {

    declare var npm$namespace$tmp: {
        file: typeof tmp$file,
        fileSync: typeof tmp$fileSync,
        dir: typeof tmp$dir,
        dirSync: typeof tmp$dirSync,
        tmpName: typeof tmp$tmpName,
        tmpNameSync: typeof tmp$tmpNameSync,
        setGracefulCleanup: typeof tmp$setGracefulCleanup,
    }
    declare type tmp$Options = {
        mode?: number
    } & tmp$SimpleOptions


    declare interface tmp$SimpleOptions {
        prefix?: string,
            postfix?: string,
            template?: string,
            dir?: string,
            tries?: number,
            keep?: boolean,
            unsafeCleanup?: boolean
    }

    declare interface tmp$SynchrounousResult {
        name: string,
            fd: number,
            removeCallback: () => void
    }

    declare function tmp$file(
        callback: (err: any, path: string, fd: number, cleanupCallback: () => void) => void): void

    declare function tmp$fileSync(config?: tmp$Options): tmp$SynchrounousResult

    declare function tmp$dir(callback: (err: any, path: string, cleanupCallback: () => void) => void): void

    declare function tmp$dirSync(config?: tmp$Options): tmp$SynchrounousResult

    declare function tmp$tmpName(callback: (err: any, path: string) => void): void

    declare function tmp$tmpNameSync(config?: tmp$SimpleOptions): string

    declare function tmp$setGracefulCleanup(): void
    declare module.exports: typeof tmp
}