// @flow
/**
 * Flowtype definitions for mock-require
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'mock-require' {
    declare interface Mock {

        /**
         * 
         * @param  The module you that you want to mock.
         * @param  The function or object you want to be returned from require, instead of the path module's exports, or the module you want to be returned from require, instead of the path module's export.  
         */
        (path: string, mockExport: any | Function | string): void,

        /**
         * 
         * @param  The module you that you want to stop mocking.
         */
        stop(path: string): void,

            /**
             * This function can be used to remove all registered mocks without the need to remove them individually using mock.stop(). 
             */
            stopAll(): void,

            /**
             * 
             * @param  The file whose cache you want to refresh. 
             */
            reRequire(path: string): void
    }
    declare     var myModule: Mock;
    declare module.exports: typeof myModule
}