// @flow
/**
 * Flowtype definitions for chai-datetime
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface Chai$Assertion {
    afterDate(date: Date): Chai$Assertion,
        beforeDate(date: Date): Chai$Assertion,
        equalDate(date: Date): Chai$Assertion,
        afterTime(date: Date): Chai$Assertion,
        beforeTime(date: Date): Chai$Assertion,
        equalTime(date: Date): Chai$Assertion
}

declare interface Chai$Assert {
    equalTime(val: Date, exp: Date, msg?: string): void,
        notEqualTime(val: Date, exp: Date, msg?: string): void,
        beforeTime(val: Date, exp: Date, msg?: string): void,
        notBeforeTime(val: Date, exp: Date, msg?: string): void,
        afterTime(val: Date, exp: Date, msg?: string): void,
        notAfterTime(val: Date, exp: Date, msg?: string): void,
        equalDate(val: Date, exp: Date, msg?: string): void,
        notEqualDate(val: Date, exp: Date, msg?: string): void,
        beforeDate(val: Date, exp: Date, msg?: string): void,
        notBeforeDate(val: Date, exp: Date, msg?: string): void,
        afterDate(val: Date, exp: Date, msg?: string): void,
        notAfterDate(val: Date, exp: Date, msg?: string): void
}
declare interface Date {
    should: Chai$Assertion
}
declare module 'chai-datetime' {
    declare module.exports: typeof chaiDateTime
}