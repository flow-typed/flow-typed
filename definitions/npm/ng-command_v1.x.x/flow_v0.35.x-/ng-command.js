/**
 * Flowtype definitions for ng-command
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare
var ModuleName: string;


/**
 * Command proxy object.
 */
declare interface ngCommand$ICommand {

    /**
     * Determines whether the command is currently executing.
     */
    isExecuting: boolean,

        /**
         * Determines whether the command can execute or not.
         */
        canExecute: boolean,

        /**
         * Executes the command function.
         */
        execute: () => angular.IPromise<any >
}

declare class Command mixins ICommand {
    id: string;
    isExecuting: boolean;
    canExecute: boolean;
    constructor($scope: angular.IScope, execute: () => angular.IPromise<any>, canExecute?: () => boolean): this;
    execute(): angular.IPromise<any >
}


/**
 * Command factory which creates instances of @see ICommand.
 */
declare interface ngCommand$ICommandFactory {

    /**
     * Factory instance creator method.
     * @param $scope Scope which will keep track of the command.
     * @param execute The execute function when the command is executed.
     * @param canExecute Additional function which determines whether the command can executes.
     */
    ($scope: angular.IScope, execute: () => angular.IPromise<any>, canExecute?: () => boolean): ngCommand$ICommand
}