// @flow
/**
 * Flowtype definitions for react-daterange-picker
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'react-daterange-picker' {
    declare module.exports: typeof DateRangePicker
}
declare type ReactDateRangePicker$Props = {
    bemBlock?: string,
    bemNamespace?: string,
    dateStates?: ReactDateRangePicker$DateState[],
    defaultState?: string,
    disableNavigation?: boolean,
    firstOfWeek?: number,
    helpMessage?: string,
    initialFromValue?: boolean,
    initialDate?: Date,
    initialMonth?: number,
    initialYear?: number,
    initialRange?: {},
    maximumDate?: Date,
    minimumDate?: Date,
    numberOfCalendars?: number,
    onHighlightDate(date: Date): void,
    onHighlightRange(date: Date): void,
    onSelect(value: ReactDateRangePicker$Props): void,
    onSelectStart(value: moment.Moment): void,
    paginationArrowComponent?: ReactDateRangePicker$PaginationArrow,
    selectedLabel?: string,
    selectionType?: "single" | "range",
    singleDateRange?: boolean,
    showLegend?: boolean,
    stateDefinitions?: ReactDateRangePicker$StateDefinitions,
    value?: moment.Moment | moment.Range
}

declare interface ReactDateRangePicker$DateState {
    state: string,
        range: moment.Range
}

declare interface ReactDateRangePicker$StateDefinitions {
    [key: string]: ReactDateRangePicker$StateDefinition
}

declare interface ReactDateRangePicker$StateDefinition {
    color: string,
        label: string,
        selectable?: boolean
}

declare type ReactDateRangePicker$PaginationArrowProps = {
    disabled?: boolean,
    onTrigger(): void,
    direction?: "next" | "previous"
}

declare class PaginationArrow mixins React.Component<ReactDateRangePicker$PaginationArrowProps, {}>{}

declare class DateRangePicker mixins React.Component<ReactDateRangePicker$Props, {}>{}