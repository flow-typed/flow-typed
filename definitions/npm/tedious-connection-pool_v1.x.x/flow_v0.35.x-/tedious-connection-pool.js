/**
 * Flowtype definitions for tedious-connection-pool
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'tedious-connection-pool' {

    /**
     * Extends Tedious Connection with release function
     */
    declare export class PooledConnection mixins tedious.Connection {

        /**
         * If the connection is issued from a connection pool returns the connection to the pool.
         */
        release(): void
    }


    /**
     * Acquire function callback signature
     */
    declare export interface tcp$ConnectionCallback {

        /**
         * Provides a connection or an error
         * @param err error if any
         * @param connection issued from the pool
         */
        (err: Error, connection: tcp$PooledConnection): void
    }


    /**
     * Pool Configuration interface
     */
    declare export interface tcp$PoolConfig {

        /**
         * Minimum concurrent connections
         */
        min?: number,

            /**
             * Maximum concurrent connections
             */
            max?: number,

            /**
             * Defines if logging is activated
             */
            log?: boolean,

            /**
             * Idle timeout
             */
            idleTimeout?: number,

            /**
             * Retry delay
             */
            retryDelay?: number,

            /**
             * Acquire timeout
             */
            acquireTimeout?: number
    }
    declare module.exports: typeof tcp
}