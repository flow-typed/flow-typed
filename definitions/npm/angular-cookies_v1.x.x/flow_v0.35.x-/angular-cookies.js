// @flow
/**
 * Flowtype definitions for angular-cookies
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'angular-cookies' {
    declare     var _: string;
    declare module.exports: typeof _
}
declare module 'cookies' {

    /**
     * Cookies options
     * see https://docs.angularjs.org/api/ngCookies/provider/$cookiesProvider#defaults
     */
    declare interface ICookiesOptions {

        /**
         * The cookie will be available only for this path and its sub-paths.
         * By default, this would be the URL that appears in your base tag.
         */
        path?: string,

            /**
             * The cookie will be available only for this domain and its sub-domains.
             * For obvious security reasons the user agent will not accept the cookie if the
            current domain is not a sub domain or equals to the requested domain.
            */
            domain?: string,

            /**
             * String of the form "Wdy, DD Mon YYYY HH:MM:SS GMT" or a Date object
             * indicating the exact date/time this cookie will expire.
             */
            expires?: string | Date,

            /**
             * The cookie will be available only in secured connection.
             */
            secure?: boolean
    }

    /**
     * CookieService
     * see http://docs.angularjs.org/api/ngCookies.$cookies
     */
    declare interface ICookiesService {
        [index: string]: any
    }

    /**
     * CookieStoreService DEPRECATED
     * see https://code.angularjs.org/1.2.26/docs/api/ngCookies/service/$cookieStore
     */
    declare interface ICookieStoreService {

        /**
         * Returns the value of given cookie key
         * @param key Id to use for lookup
         */
        get(key: string): any,

            /**
             * Sets a value for given cookie key
             * @param key Id for the value
             * @param value Value to be stored
             */
            put(key: string, value: any): void,

            /**
             * Remove given cookie
             * @param key Id of the key-value pair to delete
             */
            remove(key: string): void
    }
}