/**
 * Flowtype definitions for webfontloader
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */


declare
var npm$namespace$WebFont: {
    load: typeof WebFont$load,
}
declare
export function WebFont$load(config: WebFont$Config): void

declare
export interface WebFont$Config {

    /**
     * Setting this to false will disable html classes (defaults to true) 
     */
    classes?: boolean,

        /**
         * Settings this to false will disable callbacks/events (defaults to true) 
         */
        events?: boolean,

        /**
         * Time (in ms) until the fontinactive callback will be triggered (defaults to 5000) 
         */
        timeout?: number,

        /**
         * This event is triggered when all fonts have been requested. 
         */
        loading(): void,

        /**
         * This event is triggered when the fonts have rendered. 
         */
        active(): void,

        /**
         * This event is triggered when the browser does not support linked fonts or if none of the fonts could be loaded. 
         */
        inactive(): void,

        /**
         * This event is triggered once for each font that's loaded. 
         */
        fontloading(familyName: string, fvd: string): void,

        /**
         * This event is triggered once for each font that renders. 
         */
        fontactive(familyName: string, fvd: string): void,

        /**
         * This event is triggered if the font can't be loaded. 
         */
        fontinactive(familyName: string, fvd: string): void,

        /**
         * Child window or iframes to manage fonts for 
         */
        context?: Array<string>,
        custom?: WebFont$Custom,
        google?: WebFont$Google,
        typekit?: WebFont$Typekit,
        fontdeck?: WebFont$Fontdeck,
        monotype?: WebFont$Monotype
}

declare
export interface WebFont$Google {
    families: Array<string>,
        text?: string
}

declare
export interface WebFont$Typekit {
    id?: Array<string >
}

declare
export interface WebFont$Custom {
    families?: Array<string>,
        urls?: Array<string>,
        testStrings?: {
            [fontFamily: string]: string
        }
}

declare
export interface WebFont$Fontdeck {
    id?: string
}

declare
export interface WebFont$Monotype {
    projectId?: string,
        version?: number
}
declare module 'webfontloader' {
    declare module.exports: typeof WebFont
}