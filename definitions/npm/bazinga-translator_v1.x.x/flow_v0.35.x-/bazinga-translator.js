/**
 * Flowtype definitions for bazinga-translator
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface BazingaTranslator {

    /**
     * The current locale.
     * @type  
     */
    locale: string,

        /**
         * Fallback locale.
         * @type  
         */
        fallback: string,

        /**
         * Placeholder prefix.
         * @type  
         */
        placeHolderPrefix: string,

        /**
         * Placeholder suffix.
         * @type  
         */
        placeHolderSuffix: string,

        /**
         * Default domain.
         * @type  
         */
        defaultDomain: string,

        /**
         * Plural separator.
         * @type  
         */
        pluralSeparator: string,

        /**
         * Adds a translation entry.
         * @param  The message id
         * @param  The message to register for the given id
         * @param  The domain for the message or null to use the default
         * @param  The locale or null to use the default
         * @return  Translator
         */
        add(id: string, message: string, domain: string, locale: string): BazingaTranslator,

        /**
         * Translates the given message.
         * @param  The message id
         * @param  An array of parameters for the message
         * @param  The domain for the message or null to guess it
         * @param  The locale or null to use the default
         * @return  The translated string
         */
        trans(id: string, parameters: any, domain: string, locale?: string): string,

        /**
         * Translates the given choice message by choosing a translation according to a number.
         * @param  The message id
         * @param  The number to use to find the indice of the message
         * @param  An array of parameters for the message
         * @param  The domain for the message or null to guess it
         * @param  The locale or null to use the default
         * @return  The translated string
         */
        transChoice(
            id: string,
            number: number,
            parameters: any,
            domain: string,
            locale?: string): string,

        /**
         * Loads translations from JSON.
         * @param  A JSON string or object literal
         * @return  Translator
         */
        fromJSON(data: string): BazingaTranslator,
        reset(): void
}
declare
var Translator: BazingaTranslator;