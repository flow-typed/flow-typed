// @flow
/**
 * Flowtype definitions for spectacle
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'spectacle' {


    /**
     * Transition Types for Spectacle
     */
    declare type transitionType = "slide" | "zoom" | "fade" | "spin";

    /**
     * Progress Types for Spectacle
     */
    declare type progressType = "pacman" | "bar" | "number" | "none";

    /**
     * Alignment Types for Spectacle
     */
    declare type alignType = "flex-start flex-start" |
        "flex-start center" |
        "flex-start flex-end" |
        "center flex-start" |
        "center center" |
        "center flex-end" |
        "flex-end flex-start" |
        "flex-end center" |
        "flex-end flex-end";

    /**
     * Base props for many Spectacle components
     */
    declare     export interface BaseProps {
        italic?: boolean,
            bold?: boolean,
            caps?: boolean,
            margin?: number | string,
            padding?: number | string,
            textColor?: string,
            textSize?: string,
            textAlign?: string,
            textFont?: string,
            bgColor?: string,
            bgImage?: string,
            bgDarken?: number
    }
    declare     export interface SpectacleProps {
        theme?: {
            [key: string]: string | number
        }
    }
    declare     export interface DeckProps {
        transition?: transitionType[],
            transitionDuration?: number,
            progress?: progressType,
            controls?: boolean
    }
    declare     export type SlideProps = {
        align?: alignType,
        transition?: transitionType[],
        transitionDuration?: number,
        notes?: string,
        id?: string
    } & BaseProps

    declare     export interface MarkdownProps {
        source?: string,
            mdastConfig?: {
                [key: string]: string | number
            }
    }
    declare     export type CodePaneProps = {
        lang?: string,
        source?: string
    } & BaseProps

    declare     export type HeadingProps = {
        fit?: boolean,
        lineHeight?: number,
        size?: number
    } & BaseProps

    declare     export type ImageProps = {
        display?: string,
        height?: number,
        src?: string,
        width?: number | string
    } & BaseProps

    declare     export type LinkProps = {
        href?: string
    } & BaseProps

    declare     export type SProps = {
        type?: string
    } & BaseProps

    declare     export type TextProps = {
        fit?: boolean,
        lineHeight?: number
    } & BaseProps

    declare     export class Spectacle mixins React.Component<SpectacleProps, any>{}
    declare     export class Deck mixins React.Component<DeckProps, any>{}
    declare     export class Slide mixins React.Component<SlideProps, any>{}
    declare     export class Layout mixins React.Component<any, any>{}
    declare     export class Fit mixins React.Component<any, any>{}
    declare     export class Fill mixins React.Component<any, any>{}
    declare     export class Markdown mixins React.Component<MarkdownProps, any>{}
    declare     export class Appear mixins React.Component<any, any>{}
    declare     export class BlockQuote mixins React.Component<BaseProps, any>{}
    declare     export class Quote mixins React.Component<BaseProps, any>{}
    declare     export class Cite mixins React.Component<BaseProps, any>{}
    declare     export class CodePane mixins React.Component<CodePaneProps, any>{}
    declare     export class Code mixins React.Component<BaseProps, any>{}
    declare     export class Heading mixins React.Component<HeadingProps, any>{}
    declare     export class Image mixins React.Component<ImageProps, any>{}
    declare     export class Link mixins React.Component<LinkProps, any>{}
    declare     export class List mixins React.Component<BaseProps, any>{}
    declare     export class ListItem mixins React.Component<BaseProps, any>{}
    declare     export class S mixins React.Component<SProps, any>{}
    declare     export class Table mixins React.Component<BaseProps, any>{}
    declare     export class TableRow mixins React.Component<BaseProps, any>{}
    declare     export class TableHeaderItem mixins React.Component<BaseProps, any>{}
    declare     export class TableItem mixins React.Component<BaseProps, any>{}
    declare     export class Text mixins React.Component<TextProps, any>{}
}