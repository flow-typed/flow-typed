/**
 * Flowtype definitions for leaflet-markercluster
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare export interface L$MarkerClusterGroupOptions {
    showCoverageOnHover?: boolean,
        zoomToBoundsOnClick?: boolean,
        spiderfyOnMaxZoom?: boolean,
        removeOutsideVisibleBounds?: boolean,
        animate?: boolean,
        animateAddingMarkers?: boolean,
        disableClusteringAtZoom?: number,
        maxClusterRadius?: number | ((zoom: number) => number),
        polygonOptions?: PolylineOptions,
        singleMarkerMode?: boolean,
        spiderLegPolylineOptions?: PolylineOptions,
        spiderfyDistanceMultiplier?: number,
        iconCreateFunction?: any,
        chunkedLoading?: boolean,
        chunkDelay?: number
}

declare export class MarkerClusterGroup mixins FeatureGroup<ILayer>{
    constructor(): this;
    constructor(options: L$MarkerClusterGroupOptions): this;
    addLayers(layers: ILayer[]): L$MarkerClusterGroup;
    removeLayers(layers: ILayer[]): L$MarkerClusterGroup;
    clearLayers(): L$MarkerClusterGroup;
    getVisibleParent(marker: Marker): Marker;
    refreshClusters(): L$MarkerClusterGroup;
    refreshClusters(layerGroup: LayerGroup<ILayer>): L$MarkerClusterGroup;
    refreshClusters(marker: Marker): L$MarkerClusterGroup;
    refreshClusters(markers: Marker[]): L$MarkerClusterGroup;
    getChildCount(): number;
    getAllChildMarkers(): Marker[];
    zoomToShowLayer(layer: any, callback: () => void): void
}