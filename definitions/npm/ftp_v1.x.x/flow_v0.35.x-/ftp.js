// @flow
/**
 * Flowtype definitions for ftp
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'ftp' {

    /**
     * Options for Client#connect()
     */
    declare     export interface Client$Options {

        /**
         * The hostname or IP address of the FTP server. Default: 'localhost'
         */
        host?: string,

            /**
             * The port of the FTP server. Default: 21
             */
            port?: number,

            /**
             * Set to true for both control and data connection encryption, 'control' for control connection encryption only, or 'implicit' for
             * implicitly encrypted control connection (this mode is deprecated in modern times, but usually uses port 990) Default: false
             */
            secure?: string | boolean,

            /**
             * Additional options to be passed to tls.connect(). Default: (none)
             */
            secureOptions?: tls.ConnectionOptions,

            /**
             * Username for authentication. Default: 'anonymous'
             */
            user?: string,

            /**
             * Password for authentication. Default: 'anonymous@'
             */
            password?: string,

            /**
             * How long (in milliseconds) to wait for the control connection to be established. Default: 10000
             */
            connTimeout?: number,

            /**
             * How long (in milliseconds) to wait for a PASV data connection to be established. Default: 10000
             */
            pasvTimeout?: number,

            /**
             * How often (in milliseconds) to send a 'dummy' (NOOP) command to keep the connection alive. Default: 10000
             */
            keepalive?: number
    }


    /**
     * Element returned by Client#list()
     */
    declare     export interface Client$ListingElement {

        /**
         * A single character denoting the entry type: 'd' for directory, '-' for file (or 'l' for symlink on *\NIX only*).
         */
        type: string,

            /**
             * The name of the entry
             */
            name: string,

            /**
             * The size of the entry in bytes
             */
            size: string,

            /**
             * The last modified date of the entry
             */
            date: Date,

            /**
             * The various permissions for this entry *(NIX only)*
             */
            rights?: {

                /**
                 * An empty string or any combination of 'r', 'w', 'x'.
                 */
                user: string,

                /**
                 * An empty string or any combination of 'r', 'w', 'x'.
                 */
                group: string,

                /**
                 * An empty string or any combination of 'r', 'w', 'x'.
                 */
                other: string
            },

            /**
             * The user name or ID that this entry belongs to *(NIX only)*.
             */
            owner?: string,

            /**
             * The group name or ID that this entry belongs to *(NIX only)*.
             */
            group?: string,

            /**
             * For symlink entries, this is the symlink's target *(NIX only)*.
             */
            target?: string,

            /**
             * True if the sticky bit is set for this entry *(NIX only)*.
             */
            sticky?: boolean
    }
    declare module.exports: typeof Client
}