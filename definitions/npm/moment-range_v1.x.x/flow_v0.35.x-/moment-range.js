/**
 * Flowtype definitions for moment-range
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare interface moment$Moment {
    within(x: moment$Range): boolean
}

declare interface moment$MomentStatic {
    range(range: string): moment$Range,
        range(range: Date[]): moment$Range,
        range(range: moment$Moment[]): moment$Range,
        range(start: Date, end: Date): moment$Range,
        range(start: moment$Moment, end: moment$Moment): moment$Range
}

declare interface moment$Range {
    start: moment$Moment,
        end: moment$Moment,
        contains(other: Date, exclusive?: boolean): boolean,
        contains(other: moment$Moment, exclusive?: boolean): boolean,
        overlaps(range: moment$Range): boolean,
        intersect(other: moment$Range): moment$Range,
        add(other: moment$Range): moment$Range,
        subtract(other: moment$Range): moment$Range[],
        by(
            range: string,
            hollaback: (current: moment$Moment) => void,
            exclusive?: boolean): void,
        by(
            range: moment$Range,
            hollaback: (current: moment$Moment) => void,
            exclusive?: boolean): void,
        isSame(other: moment$Range): boolean,
        diff(unit?: string): number,
        toDate(): Date,
        toString(): string,
        valueOf(): number,
        center(): number,
        clone(): moment$Range
}