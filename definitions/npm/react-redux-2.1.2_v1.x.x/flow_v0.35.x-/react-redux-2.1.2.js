/**
 * Flowtype definitions for react-redux-2.1.2
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare module 'react-redux' {


    declare export class ElementClass mixins Component<any, any>{}
    declare export interface ClassDecorator {
        (component: T): T
    }

    /**
     * Connects a React component to a Redux store.
     * @param mapStateToProps 
     * @param mapDispatchToProps 
     * @param mergeProps 
     * @param options 
     */
    declare export function connect(
        mapStateToProps?: MapStateToProps,
        mapDispatchToProps?: MapDispatchToPropsFunction | MapDispatchToPropsObject,
        mergeProps?: MergeProps,
        options?: Options): ClassDecorator
    declare interface MapStateToProps {
        (state: any, ownProps?: any): any
    }
    declare interface MapDispatchToPropsFunction {
        (dispatch: Dispatch<any>, ownProps?: any): any
    }
    declare interface MapDispatchToPropsObject {
        [name: string]: ActionCreator<any >
    }
    declare interface MergeProps {
        (stateProps: any, dispatchProps: any, ownProps: any): any
    }
    declare interface Options {

        /**
         * If true, implements shouldComponentUpdate and shallowly compares the result of mergeProps,
         * preventing unnecessary updates, assuming that the component is a “pure” component
        and does not rely on any input or state other than its props and the selected Redux store’s state.
        Defaults to true.
         * @default  true
        */
        pure: boolean
    }
    declare export interface Property {

        /**
         * The single Redux store in your application.
         */
        store?: Store<any>,
            children?: Function
    }

    /**
     * Makes the Redux store available to the connect() calls in the component hierarchy below.
     */
    declare export class Provider mixins Component<Property, {}>{}
}