/**
 * Flowtype definitions for please
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.0.0
 * Author: [Joar Wilk](http://twitter.com/joarwilk)
 * Repo: http://github.com/joarwilk/flowgen
 */

declare var Please: PleaseJS$Please;
declare export interface PleaseJS$Please {
    make_color(options?: PleaseJS$MakeColorOption): Array<string>,
        make_color(options?: PleaseJS$MakeColorOption): Array<PleaseJS$RGB>,
        make_color(options?: PleaseJS$MakeColorOption): Array<PleaseJS$HSV>,
        make_scheme(base_color: PleaseJS$HSV, options?: PleaseJS$MakeSchemeOption): Array<string>,
        make_scheme(
            base_color: PleaseJS$HSV,
            options?: PleaseJS$MakeSchemeOption): Array<PleaseJS$RGB>,
        make_scheme(
            base_color: PleaseJS$HSV,
            options?: PleaseJS$MakeSchemeOption): Array<PleaseJS$HSV>,
        NAME_to_HEX(name: string): string,
        NAME_to_RGB(name: string): PleaseJS$RGB,
        NAME_to_HSV(name: string): PleaseJS$HSV,
        HEX_to_RGB(hex: string): PleaseJS$RGB,
        RGB_to_HEX(rgb: PleaseJS$RGB): string,
        HSV_to_RGB(hsv: PleaseJS$HSV): PleaseJS$RGB,
        RGB_to_HSV(rgb: PleaseJS$RGB): PleaseJS$HSV,
        HSV_to_HEX(hsv: PleaseJS$HSV): string,
        HEX_to_HSV(hex: string): PleaseJS$HSV
}

declare export interface PleaseJS$MakeColorOption {
    hue?: number,
        saturation?: number,
        value?: number,
        base_color?: string,
        greyscale?: boolean,
        grayscale?: boolean,
        golden?: boolean,
        full_random?: boolean,
        colors_returned?: number,
        format?: string
}

declare export interface PleaseJS$MakeSchemeOption {
    scheme_type: string,
        format: string
}

declare export interface PleaseJS$RGB {
    r: number,
        g: number,
        b: number
}

declare export interface PleaseJS$HSV {
    h: number,
        s: number,
        v: number
}